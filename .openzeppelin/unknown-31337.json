{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "txHash": "0x0da61deffc8621d997c3d51e7271b93fdd60fa6349774d1abd34f57a49755b17",
    "deployTransaction": {
      "hash": "0x0da61deffc8621d997c3d51e7271b93fdd60fa6349774d1abd34f57a49755b17",
      "type": 2,
      "accessList": [],
      "blockHash": "0xd152437940372bf3ecd09cb9f691e8484a6d0cca98de5850f535b7ece00fdc96",
      "blockNumber": 3,
      "transactionIndex": 0,
      "confirmations": 1,
      "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x647a6d9e"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x3b9aca00"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x8d5a113c"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 2,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x5276a3c6c31f6aa9e2a7e27ecf19cf683ed84122b1baaa8dd96444d4690ae310",
      "s": "0x6ec56c01502c6c4f51e2466572da02fd3a915436a834cbc9420ab192e17a5d09",
      "v": 0,
      "creates": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "chainId": 31337
    }
  },
  "proxies": [
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0xf7406ce5f39b9eb82803dcd4a985807feb839280af8eb4ffbbaecceb0e652d93",
      "kind": "transparent"
    },
    {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0x022d517af2e34826293b53a35d7ee6154a6659294e0f9a20ad3ff3e7cc26d2e3",
      "kind": "transparent"
    },
    {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0x7134c6854b7fdb9f135e3ec6061b889e4e09cd67c40968831739240808cbbc76",
      "kind": "transparent"
    },
    {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0x6c4d1cf743b39708c73bfeeec1ca62ad03eda759c70ff6e9b752142b2abf95cd",
      "kind": "transparent"
    },
    {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0x20c3e6dcba2ee169533a3bc89b65351e96ab1ebbb0ba671f071711e0a7ad92a4",
      "kind": "transparent"
    },
    {
      "address": "0x851356ae760d987E095750cCeb3bC6014560891C",
      "txHash": "0x5dfa76bdce1baf7069234c5791b5ce629fe8b3a9748ed9010c8c096495849534",
      "kind": "transparent"
    },
    {
      "address": "0x95401dc811bb5740090279Ba06cfA8fcF6113778",
      "txHash": "0xd32b466db4172d09bfc4b3496eeade77337240bbb603e0b42b4c0ba35cf2d657",
      "kind": "transparent"
    },
    {
      "address": "0x70e0bA845a1A0F2DA3359C97E0285013525FFC49",
      "txHash": "0xb0dbe1aa41c32e4b698a031b930e177cd10b46c2e4ae05603474f2120fbe014e",
      "kind": "transparent"
    },
    {
      "address": "0x99bbA657f2BbC93c02D617f8bA121cB8Fc104Acf",
      "txHash": "0xcfed720db43becd7d70873f8adf884f6113fc8c89dd238873087e3737c26ab4f",
      "kind": "transparent"
    },
    {
      "address": "0x8f86403A4DE0BB5791fa46B8e795C547942fE4Cf",
      "txHash": "0x055e5af98a3f4320bbf91e5e827263b1b0dea75a4dc58d74a93bf60a0012fe1f",
      "kind": "transparent"
    },
    {
      "address": "0x5f3f1dBD7B74C6B46e8c44f98792A1dAf8d69154",
      "txHash": "0x8549bcd5186d3d2eaed96d5c3e2a693b02a6e92c7dfbe5167ea2b848c01c4726",
      "kind": "transparent"
    },
    {
      "address": "0xc351628EB244ec633d5f21fBD6621e1a683B1181",
      "txHash": "0x15d67caa41470e33fc68d5b107fce3eea85b6baea656fa218a89e980a47c92ae",
      "kind": "transparent"
    },
    {
      "address": "0x21dF544947ba3E8b3c32561399E88B52Dc8b2823",
      "txHash": "0xf65346b45549bfc531e3d98e25000c6bea69110a15d966a254d558713c500f94",
      "kind": "transparent"
    },
    {
      "address": "0xD8a5a9b31c3C0232E196d518E89Fd8bF83AcAd43",
      "txHash": "0xecdb766999e88d7af578b36e9d6d7aee8a7b8e2d0cb3006f24ce177dbbc0cba5",
      "kind": "transparent"
    },
    {
      "address": "0xBEc49fA140aCaA83533fB00A2BB19bDdd0290f25",
      "txHash": "0x180a304b85cf841cf55ff25154744dada16ad2cba6f9d6ac2f99fe3e4f4d6533",
      "kind": "transparent"
    },
    {
      "address": "0xD84379CEae14AA33C123Af12424A37803F885889",
      "txHash": "0x0d33e4ba2c846f6a30b4ba6b083188623aba0cd7e0e43b0aebec6b56df4eeab2",
      "kind": "transparent"
    },
    {
      "address": "0xfbC22278A96299D91d41C453234d97b4F5Eb9B2d",
      "txHash": "0x313009f9786f4140a972df4b04bf1533d920c24b4a7fcfc612efc21a0017a32a",
      "kind": "transparent"
    },
    {
      "address": "0x86A2EE8FAf9A840F7a2c64CA3d51209F9A02081D",
      "txHash": "0x9a10f0a396be8b44be57955e3a3f1828731d387ae6645c6b7cdd62998684f897",
      "kind": "transparent"
    },
    {
      "address": "0xA4899D35897033b927acFCf422bc745916139776",
      "txHash": "0x4ca6c57dcf7ae4aaf4647e7d18e2bdb2c17bc90a6cdd200ad4215e12bbb48941",
      "kind": "transparent"
    },
    {
      "address": "0xf953b3A269d80e3eB0F2947630Da976B896A8C5b",
      "txHash": "0xf3047e40fbd7c79aa1d9c9c970d33186966b854f45f0dc376f85dfc44af1db2d",
      "kind": "transparent"
    },
    {
      "address": "0xAA292E8611aDF267e563f334Ee42320aC96D0463",
      "txHash": "0xf1fb4e361688ca23b6bd15fc4fcbcf58d256366c4181ca2535e4c58956b63757",
      "kind": "transparent"
    },
    {
      "address": "0xD5ac451B0c50B9476107823Af206eD814a2e2580",
      "txHash": "0x111ea8bd9663247d6b476da21f66028c65721291885e9038367280194e75e9f1",
      "kind": "transparent"
    },
    {
      "address": "0xc0F115A19107322cFBf1cDBC7ea011C19EbDB4F8",
      "txHash": "0xb32c9d180a90a52f149f41e6f2afeef2c27edb07c2a81d8de294919e5a1e68e0",
      "kind": "transparent"
    },
    {
      "address": "0xc96304e3c037f81dA488ed9dEa1D8F2a48278a75",
      "txHash": "0x6f6296787cc4fcd931a0ab6ed856778de323bd917f877dc5b69327b2b7a877df",
      "kind": "transparent"
    },
    {
      "address": "0x34B40BA116d5Dec75548a9e9A8f15411461E8c70",
      "txHash": "0xb4ab418b39dfc024d877ff70f9fb563896cc47080c2dafc89ac99207dca3a1a5",
      "kind": "transparent"
    },
    {
      "address": "0x3347B4d90ebe72BeFb30444C9966B2B990aE9FcB",
      "txHash": "0x61596015cbfc42ad18521483f6f44774000817ebf6fc0daeebbb462304bd5c8a",
      "kind": "transparent"
    },
    {
      "address": "0x3155755b79aA083bd953911C92705B7aA82a18F9",
      "txHash": "0x4efc34da1334b0ce787be98e38563bfb35de3c3b685bfc9ef6c5169e5f7550c7",
      "kind": "transparent"
    },
    {
      "address": "0x5bf5b11053e734690269C6B9D438F8C9d48F528A",
      "txHash": "0xd3e9191c3dc53c486f45d4951a397ea8f828d5e847919a46b1337b74db65d121",
      "kind": "transparent"
    },
    {
      "address": "0xffa7CA1AEEEbBc30C874d32C7e22F052BbEa0429",
      "txHash": "0xaeae73cee661c84f6b99e0d2121b1045f69b0a37cb54492a12b34a247c7011c7",
      "kind": "transparent"
    },
    {
      "address": "0x3aAde2dCD2Df6a8cAc689EE797591b2913658659",
      "txHash": "0x14d73938e59ac1e055653c323c637df09155facb0a248ad495c89e39512ab137",
      "kind": "transparent"
    },
    {
      "address": "0xab16A69A5a8c12C732e0DEFF4BE56A70bb64c926",
      "txHash": "0xf0024f7228d12b310a01e22ab155b9c91998c8519af3d93472c75b30c02ae010",
      "kind": "transparent"
    },
    {
      "address": "0xB82008565FdC7e44609fA118A4a681E92581e680",
      "txHash": "0x6e41454bb7b01d4acf9a0cc0a9a109025d075d65c100bed341aea0a4ba27e960",
      "kind": "transparent"
    },
    {
      "address": "0x2a810409872AfC346F9B5b26571Fd6eC42EA4849",
      "txHash": "0x7f1fb155af64c23e64fc08229bc2d543255c930e2d73ae2a3767999f4ae203e6",
      "kind": "transparent"
    },
    {
      "address": "0xb9bEECD1A582768711dE1EE7B0A1d582D9d72a6C",
      "txHash": "0x4a110908c28db833868e59f1224c8d91a176e7637d157edc3bdca95a5098ccd9",
      "kind": "transparent"
    },
    {
      "address": "0x8A93d247134d91e0de6f96547cB0204e5BE8e5D8",
      "txHash": "0x82beba4e0d1b0923da3396efa4122aa47aaa6d32968e7ed3234a944b3e458907",
      "kind": "transparent"
    },
    {
      "address": "0x40918Ba7f132E0aCba2CE4de4c4baF9BD2D7D849",
      "txHash": "0x117ae22345dfc6a61482caff295245ed861ee7b61fc3a8a3cbcd0afe4b5e4e31",
      "kind": "transparent"
    },
    {
      "address": "0xF32D39ff9f6Aa7a7A64d7a4F00a54826Ef791a55",
      "txHash": "0x83f22a29eddd3fb9a1bed12ce15c21d03ab0d4c740cd229b4186491327923b94",
      "kind": "transparent"
    },
    {
      "address": "0x976fcd02f7C4773dd89C309fBF55D5923B4c98a1",
      "txHash": "0x7b8e3b0c9623708cc46d87d9b43bf0da77407bc6e7767ba6bb92819d94dbbeef",
      "kind": "transparent"
    },
    {
      "address": "0x19cEcCd6942ad38562Ee10bAfd44776ceB67e923",
      "txHash": "0xc1c1dfc42cc105f76f58b0b2eb02c66a63f9124592bf82de3fd8bb1f7bd91958",
      "kind": "transparent"
    },
    {
      "address": "0xD42912755319665397FF090fBB63B1a31aE87Cee",
      "txHash": "0xcfc6fefea98bbcc2d344ca26c38c87f51e67fe15730ca2f0d1f20a39198d41d3",
      "kind": "transparent"
    },
    {
      "address": "0xfcDB4564c18A9134002b9771816092C9693622e3",
      "txHash": "0xc51fdd242295cd3e20fbaf61ff484a4465e2258a1ab1492deb1ecfcb232f35c3",
      "kind": "transparent"
    },
    {
      "address": "0x927b167526bAbB9be047421db732C663a0b77B11",
      "txHash": "0x1f8eaf91bb7da7f806c322b3316044e21a6b04e71b6e01d8d628494376ad7590",
      "kind": "transparent"
    },
    {
      "address": "0x32EEce76C2C2e8758584A83Ee2F522D4788feA0f",
      "txHash": "0xe22be40dc23c309e66083b63caa9c8aa0c37216070c726aeab0469962b975f9f",
      "kind": "transparent"
    },
    {
      "address": "0xde2Bd2ffEA002b8E84ADeA96e5976aF664115E2c",
      "txHash": "0xc79b3b8fa6b4a5e0e76142577bf211ebcd19de5441781024ef044e187bc2fb47",
      "kind": "transparent"
    },
    {
      "address": "0xefc1aB2475ACb7E60499Efb171D173be19928a05",
      "txHash": "0x154ef3974fc51cbb889461a97787da470e469234f74527299895fd2e3715c8cf",
      "kind": "transparent"
    },
    {
      "address": "0x870526b7973b56163a6997bB7C886F5E4EA53638",
      "txHash": "0xbd9763b2e6a91698623f0f0cec1234b6e0fcd497aaba430ae770b66303b58004",
      "kind": "transparent"
    },
    {
      "address": "0xD49a0e9A4CD5979aE36840f542D2d7f02C4817Be",
      "txHash": "0x628261691d1d84f22151050a3dd022d0fcfd74aa293d75d3cc5b704e82cc5424",
      "kind": "transparent"
    },
    {
      "address": "0xe1Fd27F4390DcBE165f4D60DBF821e4B9Bb02dEd",
      "txHash": "0xcdd8adc1f37bc17eea8267848c642c73a86eac27034ed81dbcf96ee484df6217",
      "kind": "transparent"
    },
    {
      "address": "0xc582Bc0317dbb0908203541971a358c44b1F3766",
      "txHash": "0xcfd7f861bc2cc65f1f763ace17931e7637b75f8f2d37db16b3e0a840fd764c2c",
      "kind": "transparent"
    },
    {
      "address": "0xB06c856C8eaBd1d8321b687E188204C1018BC4E5",
      "txHash": "0x039bcbdc7995e3393446bb9d10c165d0198fde1699d93923cc442a2c258f2ae9",
      "kind": "transparent"
    },
    {
      "address": "0xaB7B4c595d3cE8C85e16DA86630f2fc223B05057",
      "txHash": "0x9d7d7c5e74b0bb837ea2b4fa7d316b9de05903a62bf1a0b3d003b74160656e31",
      "kind": "transparent"
    },
    {
      "address": "0xAD523115cd35a8d4E60B3C0953E0E0ac10418309",
      "txHash": "0x65825e08191b401c56bd6c30cff3df276b1af1b4c59ce2baedb78503f64121d2",
      "kind": "transparent"
    },
    {
      "address": "0x045857BDEAE7C1c7252d611eB24eB55564198b4C",
      "txHash": "0x5cb160c1a1fd6c9c478bbeb8d0258080db0223f5f7e31ab3e5a5796433e4bad8",
      "kind": "transparent"
    },
    {
      "address": "0x2b5A4e5493d4a54E717057B127cf0C000C876f9B",
      "txHash": "0xefe6e84eb449a0f19c90fc817274e3e808ec89b35c5e8ebc20198b6ee1c33b9a",
      "kind": "transparent"
    },
    {
      "address": "0x413b1AfCa96a3df5A686d8BFBF93d30688a7f7D9",
      "txHash": "0xf826eb9554ad2196046db3cc6d5fe5157562b956ba1263a0db74e3a78b12d86c",
      "kind": "transparent"
    },
    {
      "address": "0xdFdE6B33f13de2CA1A75A6F7169f50541B14f75b",
      "txHash": "0x98cf3a45e54d3791feddf72090a619d1f174aa6ddf634f3be050c99184f51d1f",
      "kind": "transparent"
    },
    {
      "address": "0xaC9fCBA56E42d5960f813B9D0387F3D3bC003338",
      "txHash": "0xdcf8487f6355c23c7bf68c3ed86f9c4c3b0ca8b22e1d3a78a958df8d82ca5c96",
      "kind": "transparent"
    },
    {
      "address": "0x38A70c040CA5F5439ad52d0e821063b0EC0B52b6",
      "txHash": "0x4413b408dc74f957e5b211949ef8fa378b41be1f276c5e522963f3cd417b03e8",
      "kind": "transparent"
    },
    {
      "address": "0x54B8d8E2455946f2A5B8982283f2359812e815ce",
      "txHash": "0x1c12094fff867e1558517cf366cd5a4e70a0908569e08cb290be86a643151c07",
      "kind": "transparent"
    },
    {
      "address": "0xf090f16dEc8b6D24082Edd25B1C8D26f2bC86128",
      "txHash": "0xd683040933d90b2f4dbf66a644fb123b4d65ab1ae56717860cc37e9f8b404273",
      "kind": "transparent"
    },
    {
      "address": "0x56D13Eb21a625EdA8438F55DF2C31dC3632034f5",
      "txHash": "0xcb16c05b8410d8969a9f39d06453129d61c9fb8a90c62ed2e5e3a158d078ca5a",
      "kind": "transparent"
    },
    {
      "address": "0x139e1D41943ee15dDe4DF876f9d0E7F85e26660A",
      "txHash": "0xc6e361be8d7abc3b7afb050868b36b39e34a0c20c8a8aa9293c282013221f13b",
      "kind": "transparent"
    },
    {
      "address": "0xAdE429ba898c34722e722415D722A70a297cE3a2",
      "txHash": "0xa7bcc89a60512e675f9b0eafa1d51e96f1eb71cef4ceecd5f6c6b8db42ad3bda",
      "kind": "transparent"
    },
    {
      "address": "0x7B4f352Cd40114f12e82fC675b5BA8C7582FC513",
      "txHash": "0x6314120a64f75f9766c16dbca8eb04a75efae6fd81331fbc2c85c106522c1d95",
      "kind": "transparent"
    },
    {
      "address": "0xcE0066b1008237625dDDBE4a751827de037E53D2",
      "txHash": "0xcc5137843931747d6ea1b837cd8b98b89f63a8672edeff7d7fbdafb5a3213344",
      "kind": "transparent"
    },
    {
      "address": "0x82EdA215Fa92B45a3a76837C65Ab862b6C7564a8",
      "txHash": "0xea34ac5789614e1a4d2502672fa6a1fb9b4bcc716c955209fc96516bc0b45ad5",
      "kind": "transparent"
    },
    {
      "address": "0x87006e75a5B6bE9D1bbF61AC8Cd84f05D9140589",
      "txHash": "0x1cad9f0bed85101a72d8570d51023f6072269e9e4f19922aa76e7bdb94070439",
      "kind": "transparent"
    },
    {
      "address": "0xcD0048A5628B37B8f743cC2FeA18817A29e97270",
      "txHash": "0x5fab3f490f2412ccb2809cd7b461d0485d3ddf57ac56fd333ad2d25a9b788927",
      "kind": "transparent"
    },
    {
      "address": "0x8bEe2037448F096900Fd9affc427d38aE6CC0350",
      "txHash": "0x54ae658116badb68c5865ebdab68943a2660512a9671d8930d7b5fbae11fe836",
      "kind": "transparent"
    },
    {
      "address": "0x942ED2fa862887Dc698682cc6a86355324F0f01e",
      "txHash": "0x33d1fbd32d0b9e6efb880c13727e6bf5f1949e6dc906057ae811b305d3173dca",
      "kind": "transparent"
    },
    {
      "address": "0x8D81A3DCd17030cD5F23Ac7370e4Efb10D2b3cA4",
      "txHash": "0xced9a88f670789f19d4c7bb2808e5fe088fb5b0b6d4be8b1e555570564bcbc23",
      "kind": "transparent"
    },
    {
      "address": "0xcC4c41415fc68B2fBf70102742A83cDe435e0Ca7",
      "txHash": "0xfaa8f99269c1679e7d917f3a3dbde9fe011eb676e6b66d1c6841eaccfb846350",
      "kind": "transparent"
    },
    {
      "address": "0xc7cDb7A2E5dDa1B7A0E792Fe1ef08ED20A6F56D4",
      "txHash": "0x2404249aaada4ace8818362ef87dcf6c95fb60208812168865af22913af0b15e",
      "kind": "transparent"
    },
    {
      "address": "0x193521C8934bCF3473453AF4321911E7A89E0E12",
      "txHash": "0xda84b7dcb7a02a5030057fe2b1b3d71730bfda7666ee8faead1f18d3e793b92b",
      "kind": "transparent"
    },
    {
      "address": "0x01E21d7B8c39dc4C764c19b308Bd8b14B1ba139E",
      "txHash": "0xcb0097a8f4ed0b4ede2596bd4fd6029fa988d2a492f7fbd7768b91298f2f82f7",
      "kind": "transparent"
    },
    {
      "address": "0x3C1Cb427D20F15563aDa8C249E71db76d7183B6c",
      "txHash": "0x303d875eb6da0ce3a064db321389f9dfdf50869663d1ae2890c85ddb2107db6b",
      "kind": "transparent"
    },
    {
      "address": "0x22a9B82A6c3D2BFB68F324B2e8367f346Dd6f32a",
      "txHash": "0xfef887a01a5c8015a1822435d5ff7bea9aa5afb651cff9e9d9918184c7555ea7",
      "kind": "transparent"
    },
    {
      "address": "0x7C8BaafA542c57fF9B2B90612bf8aB9E86e22C09",
      "txHash": "0x930346e6a5f5df65bc4569cdb7bb5570c29e822b5a4458bbf9c4f2c033ad4b97",
      "kind": "transparent"
    },
    {
      "address": "0x0a17FabeA4633ce714F1Fa4a2dcA62C3bAc4758d",
      "txHash": "0xd2674d8425cdae4336c31e84370eeca88eea1369ad330e830d9c0f54a9163ec1",
      "kind": "transparent"
    },
    {
      "address": "0xd3FFD73C53F139cEBB80b6A524bE280955b3f4db",
      "txHash": "0x25d328c3750eb3e85111970fb4d84a73e95e68b53e00cb57b4fcfb05a9525d6c",
      "kind": "transparent"
    },
    {
      "address": "0x512F7469BcC83089497506b5df64c6E246B39925",
      "txHash": "0xe781aa03df751b52c112fed669533abfe7beefc5571120127a0bfca755fb9d2a",
      "kind": "transparent"
    },
    {
      "address": "0x9fD16eA9E31233279975D99D5e8Fc91dd214c7Da",
      "txHash": "0xd6539963c591f7748678fbd35861f43d561fd433d0eae07c382cc912a3c33a81",
      "kind": "transparent"
    },
    {
      "address": "0xCBBe2A5c3A22BE749D5DDF24e9534f98951983e2",
      "txHash": "0x85482019964307722ade701c4a82ee8bab41a34cb6ee1abf6b1097931140e8ea",
      "kind": "transparent"
    },
    {
      "address": "0x987e855776C03A4682639eEb14e65b3089EE6310",
      "txHash": "0x85a4793fba2c401e8551e88b76cf75951b896d602f62a85d21f9d01eb1c023cb",
      "kind": "transparent"
    },
    {
      "address": "0xE8F7d98bE6722d42F29b50500B0E318EF2be4fc8",
      "txHash": "0xc62c9a11aff0ba47165b31e24efe8edc57cfa60fd20575c8fd1df9c40f1a465b",
      "kind": "transparent"
    },
    {
      "address": "0xf5c4a909455C00B99A90d93b48736F3196DB5621",
      "txHash": "0xb140329b3cc70c00f5330f24cd103b013fdf114d09c07de5f4247ef802398899",
      "kind": "transparent"
    },
    {
      "address": "0xFD2Cf3b56a73c75A7535fFe44EBABe7723c64719",
      "txHash": "0x1b94c3613bd7b9a1be043a6f9bf65a4bbd8e7379809a24ef93d52fd6c20458e0",
      "kind": "transparent"
    },
    {
      "address": "0xB22C255250d74B0ADD1bfB936676D2a299BF48Bd",
      "txHash": "0xc03821715b72ded43fd7c37b092b44adf25d1372c9e4d9b2f4e6f20101f706a4",
      "kind": "transparent"
    },
    {
      "address": "0x666D0c3da3dBc946D5128D06115bb4eed4595580",
      "txHash": "0x571c50b20415f68d3639ddd176b25efaac63479d2a7ee07470e59556e28515bb",
      "kind": "transparent"
    },
    {
      "address": "0x742489F22807ebB4C36ca6cD95c3e1C044B7B6c8",
      "txHash": "0x5f0830cb251a429acef8cfd9b9c88b797b7de140eaf0e16054853a850f7dda87",
      "kind": "transparent"
    },
    {
      "address": "0xA9e6Bfa2BF53dE88FEb19761D9b2eE2e821bF1Bf",
      "txHash": "0x8c0f40418f7cf5506e1ac4457bcba73003d84afb15da5f7a4e300070f0b9a33c",
      "kind": "transparent"
    },
    {
      "address": "0x4000F8820522AC96C4221b299876e3e53bCc8525",
      "txHash": "0x692e3f9bd5d0fce9d1d6872edf8108e1b9e3337a80fde9fb731ec03666ba3dfa",
      "kind": "transparent"
    },
    {
      "address": "0x9338CA7d556248055f5751d85cDA7aD6eF254433",
      "txHash": "0x27a285fb7a42a5831387869bc8899d6b541ed132c0da0c915d3304bfc8908672",
      "kind": "transparent"
    },
    {
      "address": "0x9c65f85425c619A6cB6D29fF8d57ef696323d188",
      "txHash": "0x03610e9241ef53d737caa69a98fa5251a1a01bb7425d72f98c92c768522d0f1e",
      "kind": "transparent"
    },
    {
      "address": "0x7Cf4be31f546c04787886358b9486ca3d62B9acf",
      "txHash": "0x7ab33963a6bde30b4924ec9a39b47c92ee0dadbe5e1c55d47af477c4bbc9caad",
      "kind": "transparent"
    },
    {
      "address": "0x33E45b187da34826aBCEDA1039231Be46f1b05Af",
      "txHash": "0x7b6bb501536c57a545acba8dfe1fdd1d9461d6d8e541919b9b25ec4a7da904d0",
      "kind": "transparent"
    },
    {
      "address": "0x0c626FC4A447b01554518550e30600136864640B",
      "txHash": "0xde94da69a761fa91579f545b429e6b7c7cda92643c2c78302f811594e061fdd2",
      "kind": "transparent"
    },
    {
      "address": "0x9849832a1d8274aaeDb1112ad9686413461e7101",
      "txHash": "0x8f6e8c53d79cedb8a8e384297a571cd7c5dc70549e0dded67b02734b81d4f766",
      "kind": "transparent"
    },
    {
      "address": "0xa4E00CB342B36eC9fDc4B50b3d527c3643D4C49e",
      "txHash": "0x3d12b8ae0e94385620745f7d8ef0972c44dfd49590a3ca5e79c769fbe744fd5f",
      "kind": "transparent"
    },
    {
      "address": "0x8ac5eE52F70AE01dB914bE459D8B3d50126fd6aE",
      "txHash": "0xd872678a67ad7b63b2b944caf94df6c188c9abbbf1b9e0fb68422cabf9e9c96e",
      "kind": "transparent"
    },
    {
      "address": "0x325c8Df4CFb5B068675AFF8f62aA668D1dEc3C4B",
      "txHash": "0x0ad083d601a59a56709380f7f00f947574cf9e58178dc7ea3ae72f1a0c9062f2",
      "kind": "transparent"
    },
    {
      "address": "0x4eaB29997D332A666c3C366217Ab177cF9A7C436",
      "txHash": "0xe39ca3e80ad4215a303a6ca30f1338f6415d0f9d1e335f70efec1af3e99258be",
      "kind": "transparent"
    },
    {
      "address": "0x5Ffe31E4676D3466268e28a75E51d1eFa4298620",
      "txHash": "0x2b4f98f461b0e08feecab3a8448def7f6f60fab08da7378b68630b453d02ff0b",
      "kind": "transparent"
    },
    {
      "address": "0x262e2b50219620226C5fB5956432A88fffd94Ba7",
      "txHash": "0x2a097554269d5641f1f139380ea65ec3b69293cbf6eaae4d6c60f94599029880",
      "kind": "transparent"
    },
    {
      "address": "0x10e38eE9dd4C549b61400Fc19347D00eD3edAfC4",
      "txHash": "0xfb71b4751ae4125cba30936162f05774eb3b8b66e24c0312f5600035756a28fc",
      "kind": "transparent"
    },
    {
      "address": "0xd753c12650c280383Ce873Cc3a898F6f53973d16",
      "txHash": "0x59e45c5b424e15f1b29e98757593f99b9f36fae78980015afac0b07046c34858",
      "kind": "transparent"
    },
    {
      "address": "0xd710a67624Ad831683C86a48291c597adE30F787",
      "txHash": "0x74073783403b8ad6092ee26ebde45cea83efdc770703a514f3847f7dd4cf257e",
      "kind": "transparent"
    },
    {
      "address": "0xd30bF3219A0416602bE8D482E0396eF332b0494E",
      "txHash": "0xa7d80dd3c7390dff94da272cbc266f9d35708dc056304eb1e48cea844cb378ca",
      "kind": "transparent"
    },
    {
      "address": "0x06b3244b086cecC40F1e5A826f736Ded68068a0F",
      "txHash": "0x5d6b1c0ca7eb76fcaf6d2e9469ccad1a15286218299d7cdb4b840401a84f7c5f",
      "kind": "transparent"
    },
    {
      "address": "0x7a2088a1bFc9d81c55368AE168C2C02570cB814F",
      "txHash": "0x0091f64175e7140d3dccf591cd631a89c26a4027cf83ea1ae8f9ea129a216853",
      "kind": "transparent"
    },
    {
      "address": "0x09635F643e140090A9A8Dcd712eD6285858ceBef",
      "txHash": "0xd5f1a13e299f85267b3deec81a01611c1f85bf5dadd3dd5fb819a1bba89f9ed4",
      "kind": "transparent"
    },
    {
      "address": "0xc5a5C42992dECbae36851359345FE25997F5C42d",
      "txHash": "0x384560428a11ac1a8c06e77918d6ad721fe60db2b55d35ea57c50409d2f3200a",
      "kind": "transparent"
    },
    {
      "address": "0x67d269191c92Caf3cD7723F116c85e6E9bf55933",
      "txHash": "0xb993b06ea2fa10cbf197ff187f804d28974c1e12e70d817290e0870e5ebd011c",
      "kind": "transparent"
    },
    {
      "address": "0xE6E340D132b5f46d1e472DebcD681B2aBc16e57E",
      "txHash": "0xeb07bd23e42f6f67a9704d6e068f217f68fd6f038d6012809d1871b0267431e7",
      "kind": "transparent"
    },
    {
      "address": "0xc3e53F4d16Ae77Db1c982e75a937B9f60FE63690",
      "txHash": "0xd54d9b7ced259de4427255ca60d8e00410877239c0d5b6a4d08304e4fbea2699",
      "kind": "transparent"
    },
    {
      "address": "0x5eb3Bc0a489C5A8288765d2336659EbCA68FCd00",
      "txHash": "0xee7b0f588c7995aa59c73b3da3d8a373423c569573de8f879340053ca74a5d51",
      "kind": "transparent"
    },
    {
      "address": "0x36C02dA8a0983159322a80FFE9F24b1acfF8B570",
      "txHash": "0x451d88b3d64b5c56f27950b4c91c7e6a8cebe6607c7f77e2e02b97cd33e68f9b",
      "kind": "transparent"
    },
    {
      "address": "0x809d550fca64d94Bd9F66E60752A544199cfAC3D",
      "txHash": "0x09085d5ad41113e94d15449f38cf95d2153b95031bf6a71b54b7d617adb85e9f",
      "kind": "transparent"
    },
    {
      "address": "0x4c5859f0F772848b2D91F1D83E2Fe57935348029",
      "txHash": "0x1a9c564762da60da5ba6537578ac530c8e78004fce772ff493605b6d65fa7914",
      "kind": "transparent"
    },
    {
      "address": "0x1291Be112d480055DaFd8a610b7d1e203891C274",
      "txHash": "0xf2c10de0a18bbf2568254e041abe58964bb20cc13543757a18ca231568c9a581",
      "kind": "transparent"
    },
    {
      "address": "0xb7278A61aa25c888815aFC32Ad3cC52fF24fE575",
      "txHash": "0x20f3eb15cb2d66a01d538bfba120b091b7481e1692a74196561af9650992bd0a",
      "kind": "transparent"
    },
    {
      "address": "0xCD8a1C3ba11CF5ECfa6267617243239504a98d90",
      "txHash": "0xe7ee267b1f507629a9103c21b02bc8fd9720daed69ab0fd8f14b5e4694a665fd",
      "kind": "transparent"
    },
    {
      "address": "0x82e01223d51Eb87e16A03E24687EDF0F294da6f1",
      "txHash": "0x486ac5bf8aafa9d0136cea91b29daf33824b5ebb9ed9441fa66753c7bf5a5263",
      "kind": "transparent"
    },
    {
      "address": "0x2bdCC0de6bE1f7D2ee689a0342D76F52E8EFABa3",
      "txHash": "0xbe0b5d0bfd275cb16312452226127f749a330688123c54c44356f912bb67ccb1",
      "kind": "transparent"
    },
    {
      "address": "0x7969c5eD335650692Bc04293B07F5BF2e7A673C0",
      "txHash": "0x7f11b1e0e305c9ed7c4c1891377a38b20ab31eb32ea03d9712577eefaaf790f8",
      "kind": "transparent"
    },
    {
      "address": "0x7bc06c482DEAd17c0e297aFbC32f6e63d3846650",
      "txHash": "0xfecb3f1c80b138a4c0a38c18dab536d29f8f0ce0e4087718cc34c3bcd62b0c21",
      "kind": "transparent"
    },
    {
      "address": "0x922D6956C99E12DFeB3224DEA977D0939758A1Fe",
      "txHash": "0xdb5d2fb7a2a32cd0c226072b2af22444b4f2c222631ce7bd38b092d846a12d59",
      "kind": "transparent"
    },
    {
      "address": "0x5081a39b8A5f0E35a8D959395a630b68B74Dd30f",
      "txHash": "0xa0a376df53153a9fdc851079b153197fb625cc2a8300e89c5acb2e69f55dd895",
      "kind": "transparent"
    },
    {
      "address": "0x1fA02b2d6A771842690194Cf62D91bdd92BfE28d",
      "txHash": "0x31ba495f669eb14020fc7ab1915f59aa58aa2fe9affece715968b40af326f18c",
      "kind": "transparent"
    },
    {
      "address": "0xdbC43Ba45381e02825b14322cDdd15eC4B3164E6",
      "txHash": "0x5778ebe85d857cab83fe434c2aea67058218b4452d58e92b2681880b249fd510",
      "kind": "transparent"
    },
    {
      "address": "0x04C89607413713Ec9775E14b954286519d836FEf",
      "txHash": "0x101df19ed7c9c023567561227a2c2f1dfb7aeb0f2bd4f3a8f954d955f26a375a",
      "kind": "transparent"
    },
    {
      "address": "0x4C4a2f8c81640e47606d3fd77B353E87Ba015584",
      "txHash": "0xfc00260b3f0b8f740999d67fccf08063260622d510e382d273bd702f2606b771",
      "kind": "transparent"
    },
    {
      "address": "0x8198f5d8F8CfFE8f9C413d98a0A55aEB8ab9FbB7",
      "txHash": "0x4481f4fc612f0943ebf9bdbcf10f3c7b6eeccc7e939a13ea635c736bfc58eae4",
      "kind": "transparent"
    },
    {
      "address": "0x0355B7B8cb128fA5692729Ab3AAa199C1753f726",
      "txHash": "0xbba8728b74c1c2a3994c67a7e3bf2765e03beb3b264af4a33144b1dfd05f14c0",
      "kind": "transparent"
    },
    {
      "address": "0x202CCe504e04bEd6fC0521238dDf04Bc9E8E15aB",
      "txHash": "0xec462b4fc43d58187e9001f37319d67ac92b9381e3350318a95c44760778c9ef",
      "kind": "transparent"
    },
    {
      "address": "0xf4B146FbA71F41E0592668ffbF264F1D186b2Ca8",
      "txHash": "0xb3d2bdd3932e11fe57f905d4e0b2d71c6bf4bffe5d069d8f8b42e02bd0b43629",
      "kind": "transparent"
    },
    {
      "address": "0x172076E0166D1F9Cc711C77Adf8488051744980C",
      "txHash": "0x74c976d00a464749fd49a49c70d0dbb6f294936379ab626a52b669ef33095469",
      "kind": "transparent"
    },
    {
      "address": "0x4EE6eCAD1c2Dae9f525404De8555724e3c35d07B",
      "txHash": "0x1c33b13bb300bfd9ff6c63164cef0d06487d4181d0c2bbdcc0a558a734e434f2",
      "kind": "transparent"
    },
    {
      "address": "0x1c85638e118b37167e9298c2268758e058DdfDA0",
      "txHash": "0xc4e24135ae8e12a83afcabe864399717678a3973d25450049290c062414a3d3e",
      "kind": "transparent"
    },
    {
      "address": "0x367761085BF3C12e5DA2Df99AC6E1a824612b8fb",
      "txHash": "0x50c5de4561110d5985fac73c5460c74795e06353f67435105861d67540461099",
      "kind": "transparent"
    },
    {
      "address": "0x4C2F7092C2aE51D986bEFEe378e50BD4dB99C901",
      "txHash": "0x940beb23a280b190608de1b2a06c4d1090f39669d78beb1f38209fbd2a868b52",
      "kind": "transparent"
    },
    {
      "address": "0x7A9Ec1d04904907De0ED7b6839CcdD59c3716AC9",
      "txHash": "0x295ff4e6665fb7083807b2255fbecc7d4719c4c6f2f6fe146da9e289006077db",
      "kind": "transparent"
    },
    {
      "address": "0x49fd2BE640DB2910c2fAb69bB8531Ab6E76127ff",
      "txHash": "0xf2304973bcf3bb49c0762d815be3d84647dd85122ef6a3f105c0853676746e43",
      "kind": "transparent"
    },
    {
      "address": "0x4631BCAbD6dF18D94796344963cB60d44a4136b6",
      "txHash": "0x438d79b0f05619e737868ef46291012b44301e0628013d4bbd9db74e77815984",
      "kind": "transparent"
    },
    {
      "address": "0xe8D2A1E88c91DCd5433208d4152Cc4F399a7e91d",
      "txHash": "0xa060f0494a1cc7796a2fd4d0efd4cc181a8c8156be065e4e70ba29bc2f50c946",
      "kind": "transparent"
    },
    {
      "address": "0x5067457698Fd6Fa1C6964e416b3f42713513B3dD",
      "txHash": "0xf212e5907cdea9bfd7c77ca088e6ecfd5da870a4130999a0baf7cde60ce79671",
      "kind": "transparent"
    },
    {
      "address": "0x18E317A7D70d8fBf8e6E893616b52390EbBdb629",
      "txHash": "0xc0e3644ae21566572114778bbf1918447fd43fe85979ba5460654b375a638035",
      "kind": "transparent"
    },
    {
      "address": "0x4b6aB5F819A515382B0dEB6935D793817bB4af28",
      "txHash": "0xc0019193d7f7a8869ab13e55bb9ee80b0a1bb1946ae2b83baf13f1975ddf53d4",
      "kind": "transparent"
    },
    {
      "address": "0xCace1b78160AE76398F486c8a18044da0d66d86D",
      "txHash": "0x07896ff1229240e17a8cf53d06a9d93f112354b1b9952644f2dd789c88755357",
      "kind": "transparent"
    },
    {
      "address": "0xF8e31cb472bc70500f08Cd84917E5A1912Ec8397",
      "txHash": "0xf99c33aa3df8e122a09496b164f50ee67c96d905324881342a093d518d8c5268",
      "kind": "transparent"
    },
    {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0xd39560d5a85f0bc6a32429b3739a7d2b450b2a883c24c13452f65b80861bb19b",
      "kind": "transparent"
    },
    {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0x1f506c590237e6af98e30cf7ee2e15ce13b0179074d2cb0ac2f3d782012db930",
      "kind": "transparent"
    },
    {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0x5eeaeb04bb784af419eb6735330b829aa73f0b665a109fd5bca18c87d1df396a",
      "kind": "transparent"
    },
    {
      "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      "txHash": "0x5c84011df86516aba2dc4e30df5c35037285256c83b707a6d2b883fd4f342007",
      "kind": "transparent"
    },
    {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0xa189d75940d76e6009810114e2728ea484e00c1a9be440720c05cc978c2a4d80",
      "kind": "transparent"
    },
    {
      "address": "0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82",
      "txHash": "0x4192e09f149064eb9c515e356d288fba9fc0b6591367c9c58de433815f01c404",
      "kind": "transparent"
    }
  ],
  "impls": {
    "2c5e4a5bf00b47b40989a4d6d1c1f104bdea13087a066242e69bb257f8680b04": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0x9fbb8c61414da15925b4502e4190d774244e4a5bb3278c5d34417ee905b2e533",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Whitelist.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Whitelist.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Whitelist.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Whitelist.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Whitelist.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Whitelist.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Whitelist.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Whitelist.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Whitelist.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Whitelist.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Whitelist.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Whitelist.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Whitelist.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Whitelist.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Whitelist.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Whitelist.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Whitelist.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Whitelist.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Whitelist.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Whitelist.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Whitelist.sol:1376"
          },
          {
            "contract": "Seed",
            "label": "_tokenIds",
            "type": "t_struct(Counter)5147_storage",
            "src": "contracts\\Seed.sol:1382"
          },
          {
            "contract": "Seed",
            "label": "_maxSupply",
            "type": "t_uint256",
            "src": "contracts\\Seed.sol:1384"
          },
          {
            "contract": "Seed",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Seed.sol:1385"
          },
          {
            "contract": "Seed",
            "label": "_whitelisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Seed.sol:1386"
          },
          {
            "contract": "Seed",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Seed.sol:1387"
          },
          {
            "contract": "Seed",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Seed.sol:1388"
          },
          {
            "contract": "Seed",
            "label": "admin",
            "type": "t_address",
            "src": "contracts\\Seed.sol:1390"
          },
          {
            "contract": "Seed",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)7093_storage)",
            "src": "contracts\\Seed.sol:1397"
          }
        ],
        "types": {
          "t_struct(Counter)5147_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)7093_storage)": {
            "label": "mapping(uint256 => struct Seed.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)7093_storage": {
            "label": "struct Seed.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "04d785facb48bd56b7df07fc68dee23f261ac79581bf455b95063b64325ae251": {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0xbc64d6524430baa986f31a21a192c10a63314469268da9fac69e65f32ffa49fc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Skin.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Skin.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Skin.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Skin.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Skin.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Skin.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Skin.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Skin.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Skin.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Skin.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Skin.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Skin.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Skin.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Skin.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Skin.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Skin.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Skin.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Skin.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Skin.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Skin.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Skin.sol:1376"
          },
          {
            "contract": "Skin",
            "label": "_tokenIds",
            "type": "t_struct(Counter)2140_storage",
            "src": "contracts\\Skin.sol:1382"
          },
          {
            "contract": "Skin",
            "label": "_maxSupply",
            "type": "t_uint256",
            "src": "contracts\\Skin.sol:1384"
          },
          {
            "contract": "Skin",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Skin.sol:1385"
          },
          {
            "contract": "Skin",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Skin.sol:1386"
          },
          {
            "contract": "Skin",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Skin.sol:1387"
          },
          {
            "contract": "Skin",
            "label": "admin",
            "type": "t_address",
            "src": "contracts\\Skin.sol:1389"
          },
          {
            "contract": "Skin",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)4082_storage)",
            "src": "contracts\\Skin.sol:1396"
          }
        ],
        "types": {
          "t_struct(Counter)2140_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)4082_storage)": {
            "label": "mapping(uint256 => struct Skin.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)4082_storage": {
            "label": "struct Skin.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7eddddaf4071c73dc79a6196443ca46745898bdd1f2de7e6028c78b85291ce56": {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0xafa8fa38908e750eb1b8f44dd4a1637ed53a9e6109ed934b192aea365aedff1d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Whitelist.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Whitelist.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Whitelist.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Whitelist.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Whitelist.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Whitelist.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Whitelist.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Whitelist.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Whitelist.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Whitelist.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Whitelist.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Whitelist.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Whitelist.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Whitelist.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Whitelist.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Whitelist.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Whitelist.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Whitelist.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Whitelist.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Whitelist.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Whitelist.sol:1376"
          },
          {
            "contract": "Land",
            "label": "_tokenIds",
            "type": "t_struct(Counter)2081_storage",
            "src": "contracts\\Land.sol:1382"
          },
          {
            "contract": "Land",
            "label": "_maxSupply",
            "type": "t_uint256",
            "src": "contracts\\Land.sol:1384"
          },
          {
            "contract": "Land",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Land.sol:1385"
          },
          {
            "contract": "Land",
            "label": "_whitelisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Land.sol:1386"
          },
          {
            "contract": "Land",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Land.sol:1387"
          },
          {
            "contract": "Land",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Land.sol:1388"
          },
          {
            "contract": "Land",
            "label": "admin",
            "type": "t_address",
            "src": "contracts\\Land.sol:1390"
          },
          {
            "contract": "Land",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)4027_storage)",
            "src": "contracts\\Land.sol:1397"
          }
        ],
        "types": {
          "t_struct(Counter)2081_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)4027_storage)": {
            "label": "mapping(uint256 => struct Land.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)4027_storage": {
            "label": "struct Land.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "026e53374d641e0c88e7a2d9b751cf0b46ccff05f3dafe37c002049add2a2e05": {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0x02d22ea662539a150f1434843919e675b70292ea5322df8cbe8ddc42e95e89ff",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Whitelist.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Whitelist.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Whitelist.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Whitelist.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Whitelist.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Whitelist.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Whitelist.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Whitelist.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Whitelist.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Whitelist.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Whitelist.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Whitelist.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Whitelist.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Whitelist.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Whitelist.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Whitelist.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Whitelist.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Whitelist.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Whitelist.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Whitelist.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Whitelist.sol:1376"
          },
          {
            "contract": "Whitelist",
            "label": "_tokenIds",
            "type": "t_struct(Counter)11279_storage",
            "src": "contracts\\Whitelist.sol:1382"
          },
          {
            "contract": "Whitelist",
            "label": "_maxSupply",
            "type": "t_uint256",
            "src": "contracts\\Whitelist.sol:1384"
          },
          {
            "contract": "Whitelist",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Whitelist.sol:1385"
          },
          {
            "contract": "Whitelist",
            "label": "_whitelisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Whitelist.sol:1386"
          },
          {
            "contract": "Whitelist",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Whitelist.sol:1387"
          },
          {
            "contract": "Whitelist",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Whitelist.sol:1388"
          },
          {
            "contract": "Whitelist",
            "label": "admin",
            "type": "t_address",
            "src": "contracts\\Whitelist.sol:1390"
          },
          {
            "contract": "Whitelist",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)13225_storage)",
            "src": "contracts\\Whitelist.sol:1397"
          }
        ],
        "types": {
          "t_struct(Counter)11279_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)13225_storage)": {
            "label": "mapping(uint256 => struct Whitelist.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)13225_storage": {
            "label": "struct Whitelist.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bc979d78c7806311987d133a508e250f365bcff698d438189dff8ed1f91d30f1": {
      "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      "txHash": "0x42ef52e7e8d2299efee74e816f85931baf2124532186498cc83e5515920152ea",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Skin.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Skin.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Skin.sol:421"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Game.sol:485"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Game.sol:487"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts\\Game.sol:489"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Game.sol:491"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Game.sol:492"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts\\Game.sol:823"
          },
          {
            "contract": "Game",
            "label": "seedNFT",
            "type": "t_contract(INFT)11",
            "src": "contracts\\Game.sol:829"
          },
          {
            "contract": "Game",
            "label": "skinNFT",
            "type": "t_contract(INFT)11",
            "src": "contracts\\Game.sol:830"
          },
          {
            "contract": "Game",
            "label": "landNFT",
            "type": "t_contract(INFT)11",
            "src": "contracts\\Game.sol:831"
          },
          {
            "contract": "Game",
            "label": "whitelistNFT",
            "type": "t_contract(INFT)11",
            "src": "contracts\\Game.sol:832"
          },
          {
            "contract": "Game",
            "label": "whitelistes",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\Game.sol:834"
          },
          {
            "contract": "Game",
            "label": "whitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Game.sol:835"
          },
          {
            "contract": "Game",
            "label": "whitelistLength",
            "type": "t_uint256",
            "src": "contracts\\Game.sol:836"
          }
        ],
        "types": {
          "t_contract(INFT)11": {
            "label": "contract INFT"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "71beae8a7dd4ae46aa850ae770d8fb101b3637f8e20edcfb59ee8ec8206f2934": {
      "address": "0xa82fF9aFd8f496c3d6ac40E2a0F282E47488CFc9",
      "txHash": "0xd1bfb745fbb0c0c05021c8f3fec9dcee6f0f8a9ff51c397205be8ffaedc39801",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Non-NFTSeed.sol:334"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Non-NFTSeed.sol:339"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Non-NFTSeed.sol:391"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Non-NFTSeed.sol:551"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Non-NFTSeed.sol:553"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts\\Non-NFTSeed.sol:555"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSeed.sol:557"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSeed.sol:558"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts\\Non-NFTSeed.sol:876"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Non-NFTSeed.sol:395"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Non-NFTSeed.sol:455"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Non-NFTSeed.sol:880"
          },
          {
            "contract": "NSeed",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSeed.sol:953"
          },
          {
            "contract": "NSeed",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSeed.sol:954"
          },
          {
            "contract": "NSeed",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "contracts\\Non-NFTSeed.sol:955"
          },
          {
            "contract": "NSeed",
            "label": "minter",
            "type": "t_address",
            "src": "contracts\\Non-NFTSeed.sol:957"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "be8e15789beb78bda2fde9a4b7fb7e805ae5b793fb893f9cdc4aa77f17a7534f": {
      "address": "0xf5059a5D33d5853360D16C683c16e67980206f36",
      "txHash": "0x3f3503a223f4fa08df14bfc503e4467fefb85a2bace07a0667699f3a86527989",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Non-NFTSkin.sol:334"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Non-NFTSkin.sol:339"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Non-NFTSkin.sol:391"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Non-NFTSkin.sol:551"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Non-NFTSkin.sol:553"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts\\Non-NFTSkin.sol:555"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSkin.sol:557"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSkin.sol:558"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts\\Non-NFTSkin.sol:876"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Non-NFTSkin.sol:395"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Non-NFTSkin.sol:455"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Non-NFTSkin.sol:880"
          },
          {
            "contract": "NSkin",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSkin.sol:953"
          },
          {
            "contract": "NSkin",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSkin.sol:954"
          },
          {
            "contract": "NSkin",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "contracts\\Non-NFTSkin.sol:955"
          },
          {
            "contract": "NSkin",
            "label": "minter",
            "type": "t_address",
            "src": "contracts\\Non-NFTSkin.sol:957"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7f636312b46c721e7b53ed40a67426a23c02fab138a9c51fb73e2a84816c42db": {
      "address": "0x998abeb3E57409262aE5b751f60747921B33613E",
      "txHash": "0xb4a034bb39043116a11503b3cbe2ee21c72750c6ecd02826ac7632ae6dfee823",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Seed.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Seed.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Seed.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Seed.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Seed.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Seed.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Seed.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Seed.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Seed.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Seed.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Seed.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Seed.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Seed.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Seed.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Seed.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Seed.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Seed.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Seed.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Seed.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Seed.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Seed.sol:1376"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Seed.sol:1380"
          },
          {
            "contract": "Seed",
            "label": "_tokenIds",
            "type": "t_struct(Counter)525_storage",
            "src": "contracts\\Seed.sol:1452"
          },
          {
            "contract": "Seed",
            "label": "_maxSupply",
            "type": "t_uint256",
            "src": "contracts\\Seed.sol:1454"
          },
          {
            "contract": "Seed",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Seed.sol:1455"
          },
          {
            "contract": "Seed",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Seed.sol:1456"
          },
          {
            "contract": "Seed",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Seed.sol:1457"
          },
          {
            "contract": "Seed",
            "label": "minter",
            "type": "t_address",
            "src": "contracts\\Seed.sol:1459"
          },
          {
            "contract": "Seed",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2599_storage)",
            "src": "contracts\\Seed.sol:1466"
          }
        ],
        "types": {
          "t_struct(Counter)525_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2599_storage)": {
            "label": "mapping(uint256 => struct Seed.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2599_storage": {
            "label": "struct Seed.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2f458d3df6e72e6f4cd082cf826291d304049a8ff4cac4cc283a7edf3378e136": {
      "address": "0x4826533B4897376654Bb4d4AD88B7faFD0C98528",
      "txHash": "0x4dd48f61cc98924885aeb1a41771e2fab1a998effc6a7fd2432e67e5b461b2f6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Skin.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Skin.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Skin.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Skin.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Skin.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Skin.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Skin.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Skin.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Skin.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Skin.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Skin.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Skin.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Skin.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Skin.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Skin.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Skin.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Skin.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Skin.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Skin.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Skin.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Skin.sol:1376"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Skin.sol:1380"
          },
          {
            "contract": "Skin",
            "label": "_tokenIds",
            "type": "t_struct(Counter)525_storage",
            "src": "contracts\\Skin.sol:1452"
          },
          {
            "contract": "Skin",
            "label": "_maxSupply",
            "type": "t_uint256",
            "src": "contracts\\Skin.sol:1454"
          },
          {
            "contract": "Skin",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Skin.sol:1455"
          },
          {
            "contract": "Skin",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Skin.sol:1456"
          },
          {
            "contract": "Skin",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Skin.sol:1457"
          },
          {
            "contract": "Skin",
            "label": "minter",
            "type": "t_address",
            "src": "contracts\\Skin.sol:1459"
          },
          {
            "contract": "Skin",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2599_storage)",
            "src": "contracts\\Skin.sol:1466"
          }
        ],
        "types": {
          "t_struct(Counter)525_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2599_storage)": {
            "label": "mapping(uint256 => struct Skin.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2599_storage": {
            "label": "struct Skin.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a8f6c2ea3cd42a2bb08760dbdddcd7760e165ef3a7924b9d7c18235ffbf4e961": {
      "address": "0x0E801D84Fa97b50751Dbf25036d067dCf18858bF",
      "txHash": "0xc1240bbd0fff9d6cb470f9b88f0d121e290942a634cf520d8c854c144a8b3b60",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Land.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Land.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Land.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Land.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Land.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Land.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Land.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Land.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Land.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Land.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Land.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Land.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Land.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Land.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Land.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Land.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Land.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Land.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Land.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Land.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Land.sol:1376"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Land.sol:1380"
          },
          {
            "contract": "Land",
            "label": "_tokenIds",
            "type": "t_struct(Counter)525_storage",
            "src": "contracts\\Land.sol:1452"
          },
          {
            "contract": "Land",
            "label": "_maxSupply",
            "type": "t_uint256",
            "src": "contracts\\Land.sol:1454"
          },
          {
            "contract": "Land",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Land.sol:1455"
          },
          {
            "contract": "Land",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Land.sol:1456"
          },
          {
            "contract": "Land",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Land.sol:1457"
          },
          {
            "contract": "Land",
            "label": "minter",
            "type": "t_address",
            "src": "contracts\\Land.sol:1459"
          },
          {
            "contract": "Land",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2599_storage)",
            "src": "contracts\\Land.sol:1466"
          }
        ],
        "types": {
          "t_struct(Counter)525_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2599_storage)": {
            "label": "mapping(uint256 => struct Land.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2599_storage": {
            "label": "struct Land.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "99be1dc842d8d79b3adee8410f0a39d35a8ecb7b5a2e0b81f572f2e82c9d5fad": {
      "address": "0x9d4454B023096f34B160D6B654540c56A1F81688",
      "txHash": "0x0d32a66d854e6eeb5c0ffcf7537cc8cb50bc0f929bc5357b8f2bb16a9b0e009e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Presale.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Presale.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Presale.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Presale.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Presale.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Presale.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Presale.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Presale.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Presale.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Presale.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Presale.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Presale.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:1376"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Presale.sol:1475"
          },
          {
            "contract": "Pack",
            "label": "_tokenIds",
            "type": "t_struct(Counter)525_storage",
            "src": "contracts\\Presale.sol:1555"
          },
          {
            "contract": "Pack",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:1557"
          },
          {
            "contract": "Pack",
            "label": "admin",
            "type": "t_address",
            "src": "contracts\\Presale.sol:1558"
          },
          {
            "contract": "Pack",
            "label": "SeedToken",
            "type": "t_contract(NonNFT)2678",
            "src": "contracts\\Presale.sol:1560"
          },
          {
            "contract": "Pack",
            "label": "SkinToken",
            "type": "t_contract(NonNFT)2678",
            "src": "contracts\\Presale.sol:1561"
          },
          {
            "contract": "Pack",
            "label": "SeedNFT",
            "type": "t_contract(INFT)2670",
            "src": "contracts\\Presale.sol:1562"
          },
          {
            "contract": "Pack",
            "label": "SkinNFT",
            "type": "t_contract(INFT)2670",
            "src": "contracts\\Presale.sol:1563"
          },
          {
            "contract": "Pack",
            "label": "LandNFT",
            "type": "t_contract(INFT)2670",
            "src": "contracts\\Presale.sol:1564"
          },
          {
            "contract": "Pack",
            "label": "BUSD",
            "type": "t_contract(IBEP20Upgradeable)2528",
            "src": "contracts\\Presale.sol:1565"
          },
          {
            "contract": "Pack",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Presale.sol:1568"
          },
          {
            "contract": "Pack",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1569"
          },
          {
            "contract": "Pack",
            "label": "_whitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Presale.sol:1570"
          },
          {
            "contract": "Pack",
            "label": "_packToMaxSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1571"
          },
          {
            "contract": "Pack",
            "label": "_packToCurrentSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1572"
          },
          {
            "contract": "Pack",
            "label": "_packToPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1573"
          },
          {
            "contract": "Pack",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2748_storage)",
            "src": "contracts\\Presale.sol:1580"
          }
        ],
        "types": {
          "t_struct(Counter)525_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(NonNFT)2678": {
            "label": "contract NonNFT"
          },
          "t_contract(INFT)2670": {
            "label": "contract INFT"
          },
          "t_contract(IBEP20Upgradeable)2528": {
            "label": "contract IBEP20Upgradeable"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2748_storage)": {
            "label": "mapping(uint256 => struct Pack.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2748_storage": {
            "label": "struct Pack.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0ed8d7334e2553bd1d011809e3dffe89ba3ed3cbb853acf6b3dc54fdb2d89288": {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0x12383db2be85b72201b9b32e7620432472d895241858a0f556c663cfcf8b69e1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Seed.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Seed.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Seed.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Seed.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Seed.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Seed.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Seed.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Seed.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Seed.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Seed.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Seed.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Seed.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Seed.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Seed.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Seed.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Seed.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Seed.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Seed.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Seed.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Seed.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Seed.sol:1376"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Seed.sol:1380"
          },
          {
            "contract": "Seed",
            "label": "_tokenIds",
            "type": "t_struct(Counter)525_storage",
            "src": "contracts\\Seed.sol:1452"
          },
          {
            "contract": "Seed",
            "label": "_maxSupply",
            "type": "t_uint256",
            "src": "contracts\\Seed.sol:1454"
          },
          {
            "contract": "Seed",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Seed.sol:1455"
          },
          {
            "contract": "Seed",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Seed.sol:1456"
          },
          {
            "contract": "Seed",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Seed.sol:1457"
          },
          {
            "contract": "Seed",
            "label": "minter",
            "type": "t_address",
            "src": "contracts\\Seed.sol:1459"
          },
          {
            "contract": "Seed",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2599_storage)",
            "src": "contracts\\Seed.sol:1466"
          }
        ],
        "types": {
          "t_struct(Counter)525_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2599_storage)": {
            "label": "mapping(uint256 => struct Seed.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2599_storage": {
            "label": "struct Seed.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fc4f4a674c7ebaa9c3f389bfd18234b59ff147102f4fbe83233259e72918d1a0": {
      "address": "0x82e01223d51Eb87e16A03E24687EDF0F294da6f1",
      "txHash": "0x24883c24cd49a1693befb68e340931a4a1f3c42f150717836a909ed39073409a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Skin.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Skin.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Skin.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Skin.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Skin.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Skin.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Skin.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Skin.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Skin.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Skin.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Skin.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Skin.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Skin.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Skin.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Skin.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Skin.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Skin.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Skin.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Skin.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Skin.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Skin.sol:1376"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Skin.sol:1380"
          },
          {
            "contract": "Skin",
            "label": "_tokenIds",
            "type": "t_struct(Counter)525_storage",
            "src": "contracts\\Skin.sol:1452"
          },
          {
            "contract": "Skin",
            "label": "_maxSupply",
            "type": "t_uint256",
            "src": "contracts\\Skin.sol:1454"
          },
          {
            "contract": "Skin",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Skin.sol:1455"
          },
          {
            "contract": "Skin",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Skin.sol:1456"
          },
          {
            "contract": "Skin",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Skin.sol:1457"
          },
          {
            "contract": "Skin",
            "label": "minter",
            "type": "t_address",
            "src": "contracts\\Skin.sol:1459"
          },
          {
            "contract": "Skin",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2599_storage)",
            "src": "contracts\\Skin.sol:1466"
          }
        ],
        "types": {
          "t_struct(Counter)525_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2599_storage)": {
            "label": "mapping(uint256 => struct Skin.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2599_storage": {
            "label": "struct Skin.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e5ba049417ca7a97fefb97dbaaac9f3968ea28c6c45a66fb87f2274f86b909fc": {
      "address": "0x7969c5eD335650692Bc04293B07F5BF2e7A673C0",
      "txHash": "0x95d21bebb4833dee7a0d4e62938269e3a9ca18e662ad475dabd1c2c7f3bab009",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Land.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Land.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Land.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Land.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Land.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Land.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Land.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Land.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Land.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Land.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Land.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Land.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Land.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Land.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Land.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Land.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Land.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Land.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Land.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Land.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Land.sol:1376"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Land.sol:1380"
          },
          {
            "contract": "Land",
            "label": "_tokenIds",
            "type": "t_struct(Counter)525_storage",
            "src": "contracts\\Land.sol:1452"
          },
          {
            "contract": "Land",
            "label": "_maxSupply",
            "type": "t_uint256",
            "src": "contracts\\Land.sol:1454"
          },
          {
            "contract": "Land",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Land.sol:1455"
          },
          {
            "contract": "Land",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Land.sol:1456"
          },
          {
            "contract": "Land",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Land.sol:1457"
          },
          {
            "contract": "Land",
            "label": "minter",
            "type": "t_address",
            "src": "contracts\\Land.sol:1459"
          },
          {
            "contract": "Land",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2599_storage)",
            "src": "contracts\\Land.sol:1466"
          }
        ],
        "types": {
          "t_struct(Counter)525_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2599_storage)": {
            "label": "mapping(uint256 => struct Land.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2599_storage": {
            "label": "struct Land.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "449eb548333d4e4b2e3383927b57dfbd0b8b9f53bdee3ccf37a40aeb7b3ea023": {
      "address": "0x2E2Ed0Cfd3AD2f1d34481277b3204d807Ca2F8c2",
      "txHash": "0x64b4395c9033f82d5d82aa474d1a0c26275d1603d69b6b0c39895ff4ae8df50f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Presale.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Presale.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Presale.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Presale.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Presale.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Presale.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Presale.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Presale.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Presale.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Presale.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Presale.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Presale.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:1376"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Presale.sol:1475"
          },
          {
            "contract": "Pack",
            "label": "_tokenIds",
            "type": "t_struct(Counter)525_storage",
            "src": "contracts\\Presale.sol:1555"
          },
          {
            "contract": "Pack",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:1557"
          },
          {
            "contract": "Pack",
            "label": "admin",
            "type": "t_address",
            "src": "contracts\\Presale.sol:1558"
          },
          {
            "contract": "Pack",
            "label": "SeedToken",
            "type": "t_contract(NonNFT)2678",
            "src": "contracts\\Presale.sol:1560"
          },
          {
            "contract": "Pack",
            "label": "SkinToken",
            "type": "t_contract(NonNFT)2678",
            "src": "contracts\\Presale.sol:1561"
          },
          {
            "contract": "Pack",
            "label": "SeedNFT",
            "type": "t_contract(INFT)2670",
            "src": "contracts\\Presale.sol:1562"
          },
          {
            "contract": "Pack",
            "label": "SkinNFT",
            "type": "t_contract(INFT)2670",
            "src": "contracts\\Presale.sol:1563"
          },
          {
            "contract": "Pack",
            "label": "LandNFT",
            "type": "t_contract(INFT)2670",
            "src": "contracts\\Presale.sol:1564"
          },
          {
            "contract": "Pack",
            "label": "BUSD",
            "type": "t_contract(IBEP20Upgradeable)2528",
            "src": "contracts\\Presale.sol:1565"
          },
          {
            "contract": "Pack",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Presale.sol:1568"
          },
          {
            "contract": "Pack",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1569"
          },
          {
            "contract": "Pack",
            "label": "_whitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Presale.sol:1570"
          },
          {
            "contract": "Pack",
            "label": "_packToMaxSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1571"
          },
          {
            "contract": "Pack",
            "label": "_packToCurrentSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1572"
          },
          {
            "contract": "Pack",
            "label": "_packToPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1573"
          },
          {
            "contract": "Pack",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2748_storage)",
            "src": "contracts\\Presale.sol:1580"
          }
        ],
        "types": {
          "t_struct(Counter)525_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(NonNFT)2678": {
            "label": "contract NonNFT"
          },
          "t_contract(INFT)2670": {
            "label": "contract INFT"
          },
          "t_contract(IBEP20Upgradeable)2528": {
            "label": "contract IBEP20Upgradeable"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2748_storage)": {
            "label": "mapping(uint256 => struct Pack.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2748_storage": {
            "label": "struct Pack.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fc80cfa90927c2511b5f4099372d178d7e60b8ed65aec2b96a77ed49d9d41449": {
      "address": "0x2B0d36FACD61B71CC05ab8F3D2355ec3631C0dd5",
      "txHash": "0x6b3a774943fe04d4c55134535d91a1a443542ebbb51e828d3d2831a30cb23003",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Presale.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Presale.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Presale.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Presale.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Presale.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Presale.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Presale.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Presale.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Presale.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Presale.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Presale.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Presale.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:1376"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Presale.sol:1475"
          },
          {
            "contract": "Pack",
            "label": "_tokenIds",
            "type": "t_struct(Counter)525_storage",
            "src": "contracts\\Presale.sol:1555"
          },
          {
            "contract": "Pack",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:1557"
          },
          {
            "contract": "Pack",
            "label": "admin",
            "type": "t_address",
            "src": "contracts\\Presale.sol:1558"
          },
          {
            "contract": "Pack",
            "label": "SeedToken",
            "type": "t_contract(NonNFT)2678",
            "src": "contracts\\Presale.sol:1560"
          },
          {
            "contract": "Pack",
            "label": "SkinToken",
            "type": "t_contract(NonNFT)2678",
            "src": "contracts\\Presale.sol:1561"
          },
          {
            "contract": "Pack",
            "label": "SeedNFT",
            "type": "t_contract(INFT)2670",
            "src": "contracts\\Presale.sol:1562"
          },
          {
            "contract": "Pack",
            "label": "SkinNFT",
            "type": "t_contract(INFT)2670",
            "src": "contracts\\Presale.sol:1563"
          },
          {
            "contract": "Pack",
            "label": "LandNFT",
            "type": "t_contract(INFT)2670",
            "src": "contracts\\Presale.sol:1564"
          },
          {
            "contract": "Pack",
            "label": "BUSD",
            "type": "t_contract(IBEP20Upgradeable)2528",
            "src": "contracts\\Presale.sol:1565"
          },
          {
            "contract": "Pack",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Presale.sol:1568"
          },
          {
            "contract": "Pack",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1569"
          },
          {
            "contract": "Pack",
            "label": "_whitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Presale.sol:1570"
          },
          {
            "contract": "Pack",
            "label": "_packToMaxSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1571"
          },
          {
            "contract": "Pack",
            "label": "_packToCurrentSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1572"
          },
          {
            "contract": "Pack",
            "label": "_packToPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1573"
          },
          {
            "contract": "Pack",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2748_storage)",
            "src": "contracts\\Presale.sol:1580"
          }
        ],
        "types": {
          "t_struct(Counter)525_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(NonNFT)2678": {
            "label": "contract NonNFT"
          },
          "t_contract(INFT)2670": {
            "label": "contract INFT"
          },
          "t_contract(IBEP20Upgradeable)2528": {
            "label": "contract IBEP20Upgradeable"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2748_storage)": {
            "label": "mapping(uint256 => struct Pack.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2748_storage": {
            "label": "struct Pack.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "656a190b33f597ed0d6331132a5d3f690634ea784a85589d299b5a70973138ee": {
      "address": "0xd9140951d8aE6E5F625a02F5908535e16e3af964",
      "txHash": "0x579d30b2e97535c9ae61e3d564bc71fbec717d855d9e75eeabd7fb3ec57817ca",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Presale.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Presale.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Presale.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Presale.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Presale.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Presale.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Presale.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Presale.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Presale.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Presale.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Presale.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Presale.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:1376"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Presale.sol:1475"
          },
          {
            "contract": "Pack",
            "label": "_tokenIds",
            "type": "t_struct(Counter)525_storage",
            "src": "contracts\\Presale.sol:1555"
          },
          {
            "contract": "Pack",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:1557"
          },
          {
            "contract": "Pack",
            "label": "admin",
            "type": "t_address",
            "src": "contracts\\Presale.sol:1558"
          },
          {
            "contract": "Pack",
            "label": "SeedToken",
            "type": "t_contract(NonNFT)2678",
            "src": "contracts\\Presale.sol:1560"
          },
          {
            "contract": "Pack",
            "label": "SkinToken",
            "type": "t_contract(NonNFT)2678",
            "src": "contracts\\Presale.sol:1561"
          },
          {
            "contract": "Pack",
            "label": "SeedNFT",
            "type": "t_contract(INFT)2670",
            "src": "contracts\\Presale.sol:1562"
          },
          {
            "contract": "Pack",
            "label": "SkinNFT",
            "type": "t_contract(INFT)2670",
            "src": "contracts\\Presale.sol:1563"
          },
          {
            "contract": "Pack",
            "label": "LandNFT",
            "type": "t_contract(INFT)2670",
            "src": "contracts\\Presale.sol:1564"
          },
          {
            "contract": "Pack",
            "label": "BUSD",
            "type": "t_contract(IBEP20Upgradeable)2528",
            "src": "contracts\\Presale.sol:1565"
          },
          {
            "contract": "Pack",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Presale.sol:1568"
          },
          {
            "contract": "Pack",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1569"
          },
          {
            "contract": "Pack",
            "label": "_whitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Presale.sol:1570"
          },
          {
            "contract": "Pack",
            "label": "_packToMaxSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1571"
          },
          {
            "contract": "Pack",
            "label": "_packToCurrentSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1572"
          },
          {
            "contract": "Pack",
            "label": "_packToPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1573"
          },
          {
            "contract": "Pack",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2748_storage)",
            "src": "contracts\\Presale.sol:1580"
          }
        ],
        "types": {
          "t_struct(Counter)525_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(NonNFT)2678": {
            "label": "contract NonNFT"
          },
          "t_contract(INFT)2670": {
            "label": "contract INFT"
          },
          "t_contract(IBEP20Upgradeable)2528": {
            "label": "contract IBEP20Upgradeable"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2748_storage)": {
            "label": "mapping(uint256 => struct Pack.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2748_storage": {
            "label": "struct Pack.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "32436ca1df56b53f3b934ad35ad6e2ca0edbd23b8b36f8d14463575d866c9475": {
      "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "txHash": "0x41d14070661f052455cfbf13155b8e9b42c49e8421ae07b355206fdbea6d07cb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Non-NFTSeed.sol:334"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Non-NFTSeed.sol:339"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Non-NFTSeed.sol:391"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Non-NFTSeed.sol:551"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Non-NFTSeed.sol:553"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts\\Non-NFTSeed.sol:555"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSeed.sol:557"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSeed.sol:558"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts\\Non-NFTSeed.sol:876"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Non-NFTSeed.sol:395"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Non-NFTSeed.sol:455"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Non-NFTSeed.sol:880"
          },
          {
            "contract": "NSeed",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSeed.sol:953"
          },
          {
            "contract": "NSeed",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSeed.sol:954"
          },
          {
            "contract": "NSeed",
            "label": "minter",
            "type": "t_address",
            "src": "contracts\\Non-NFTSeed.sol:956"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a6454b018c3f00528d9a371e284ca2f05715af3306337a8be27938e28ffcac09": {
      "address": "0x976C214741b4657bd99DFD38a5c0E3ac5C99D903",
      "txHash": "0x63dd8890f48a0fe7c9aea717a6ea921324f17d0e5db31d258b6e9700e05d1927",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Non-NFTSkin.sol:334"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Non-NFTSkin.sol:339"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Non-NFTSkin.sol:391"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Non-NFTSkin.sol:551"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Non-NFTSkin.sol:553"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts\\Non-NFTSkin.sol:555"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSkin.sol:557"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSkin.sol:558"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts\\Non-NFTSkin.sol:876"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Non-NFTSkin.sol:395"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Non-NFTSkin.sol:455"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Non-NFTSkin.sol:880"
          },
          {
            "contract": "NSkin",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSkin.sol:953"
          },
          {
            "contract": "NSkin",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSkin.sol:954"
          },
          {
            "contract": "NSkin",
            "label": "minter",
            "type": "t_address",
            "src": "contracts\\Non-NFTSkin.sol:956"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0303768cfc0ab11d5a5babf5be784b26d125047fcafaf17ec257dbfe83b92589": {
      "address": "0xa722bdA6968F50778B973Ae2701e90200C564B49",
      "txHash": "0xc4a9b13c638656a75ce896870f84f3974b92d8017a8e54a597963409cda1a9a7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Presale.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Presale.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Presale.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Presale.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Presale.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Presale.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Presale.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Presale.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Presale.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Presale.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Presale.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Presale.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:1376"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Presale.sol:1475"
          },
          {
            "contract": "Pack",
            "label": "_tokenIds",
            "type": "t_struct(Counter)525_storage",
            "src": "contracts\\Presale.sol:1555"
          },
          {
            "contract": "Pack",
            "label": "gameOpend",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:1557"
          },
          {
            "contract": "Pack",
            "label": "presaleStartTime",
            "type": "t_uint256",
            "src": "contracts\\Presale.sol:1558"
          },
          {
            "contract": "Pack",
            "label": "admin",
            "type": "t_address",
            "src": "contracts\\Presale.sol:1559"
          },
          {
            "contract": "Pack",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:1560"
          },
          {
            "contract": "Pack",
            "label": "SeedToken",
            "type": "t_contract(NonNFT)2678",
            "src": "contracts\\Presale.sol:1562"
          },
          {
            "contract": "Pack",
            "label": "SkinToken",
            "type": "t_contract(NonNFT)2678",
            "src": "contracts\\Presale.sol:1563"
          },
          {
            "contract": "Pack",
            "label": "SeedNFT",
            "type": "t_contract(INFT)2670",
            "src": "contracts\\Presale.sol:1564"
          },
          {
            "contract": "Pack",
            "label": "SkinNFT",
            "type": "t_contract(INFT)2670",
            "src": "contracts\\Presale.sol:1565"
          },
          {
            "contract": "Pack",
            "label": "LandNFT",
            "type": "t_contract(INFT)2670",
            "src": "contracts\\Presale.sol:1566"
          },
          {
            "contract": "Pack",
            "label": "BUSD",
            "type": "t_contract(IBEP20Upgradeable)2528",
            "src": "contracts\\Presale.sol:1567"
          },
          {
            "contract": "Pack",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Presale.sol:1570"
          },
          {
            "contract": "Pack",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1571"
          },
          {
            "contract": "Pack",
            "label": "_whitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Presale.sol:1572"
          },
          {
            "contract": "Pack",
            "label": "_packToMaxSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1573"
          },
          {
            "contract": "Pack",
            "label": "_packToCurrentSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1574"
          },
          {
            "contract": "Pack",
            "label": "_packToPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1575"
          },
          {
            "contract": "Pack",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2752_storage)",
            "src": "contracts\\Presale.sol:1582"
          }
        ],
        "types": {
          "t_struct(Counter)525_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(NonNFT)2678": {
            "label": "contract NonNFT"
          },
          "t_contract(INFT)2670": {
            "label": "contract INFT"
          },
          "t_contract(IBEP20Upgradeable)2528": {
            "label": "contract IBEP20Upgradeable"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2752_storage)": {
            "label": "mapping(uint256 => struct Pack.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2752_storage": {
            "label": "struct Pack.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b84b4d895a08f664f9ab9a7a7a5f8833c45e36389658ca56f9876665b21b8596": {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0x7c3f47a3a5f0e70eddcd19df018c020e81c69d3518f9729ff632c177f032f27c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Non-NFTSkin.sol:334"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Non-NFTSkin.sol:339"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Non-NFTSkin.sol:391"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Non-NFTSkin.sol:551"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Non-NFTSkin.sol:553"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts\\Non-NFTSkin.sol:555"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSkin.sol:557"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSkin.sol:558"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts\\Non-NFTSkin.sol:876"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Non-NFTSkin.sol:395"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Non-NFTSkin.sol:455"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Non-NFTSkin.sol:880"
          },
          {
            "contract": "NSkin",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSkin.sol:953"
          },
          {
            "contract": "NSkin",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSkin.sol:954"
          },
          {
            "contract": "NSkin",
            "label": "minter",
            "type": "t_address",
            "src": "contracts\\Non-NFTSkin.sol:956"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0ce9500a490cc2bdc5511b1a6b0074efb845d2c527b73a93df2072af7aeda67d": {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0xf93189eff446174521bac8c6a17a9de31f6bc4f3f561f7ca82a95fb727618548",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Skin.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Skin.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Skin.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Skin.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Skin.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Skin.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Skin.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Skin.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Skin.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Skin.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Skin.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Skin.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Skin.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Skin.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Skin.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Skin.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Skin.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Skin.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Skin.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Skin.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Skin.sol:1376"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Skin.sol:1380"
          },
          {
            "contract": "Skin",
            "label": "_tokenIds",
            "type": "t_struct(Counter)525_storage",
            "src": "contracts\\Skin.sol:1452"
          },
          {
            "contract": "Skin",
            "label": "_maxSupply",
            "type": "t_uint256",
            "src": "contracts\\Skin.sol:1454"
          },
          {
            "contract": "Skin",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Skin.sol:1455"
          },
          {
            "contract": "Skin",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Skin.sol:1456"
          },
          {
            "contract": "Skin",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Skin.sol:1457"
          },
          {
            "contract": "Skin",
            "label": "minter",
            "type": "t_address",
            "src": "contracts\\Skin.sol:1459"
          },
          {
            "contract": "Skin",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2599_storage)",
            "src": "contracts\\Skin.sol:1466"
          }
        ],
        "types": {
          "t_struct(Counter)525_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2599_storage)": {
            "label": "mapping(uint256 => struct Skin.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2599_storage": {
            "label": "struct Skin.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2b02af66baf5574003d92cbe979570cad726f0d8868b03c16e4a7c07dce229d5": {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0x2a53b482c557fa5690861cec2a377a723b76cc36b3368ab2ebce63f9d9a6bd64",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Land.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Land.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Land.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Land.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Land.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Land.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Land.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Land.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Land.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Land.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Land.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Land.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Land.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Land.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Land.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Land.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Land.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Land.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Land.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Land.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Land.sol:1376"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Land.sol:1380"
          },
          {
            "contract": "Land",
            "label": "_tokenIds",
            "type": "t_struct(Counter)525_storage",
            "src": "contracts\\Land.sol:1452"
          },
          {
            "contract": "Land",
            "label": "_maxSupply",
            "type": "t_uint256",
            "src": "contracts\\Land.sol:1454"
          },
          {
            "contract": "Land",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Land.sol:1455"
          },
          {
            "contract": "Land",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Land.sol:1456"
          },
          {
            "contract": "Land",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Land.sol:1457"
          },
          {
            "contract": "Land",
            "label": "minter",
            "type": "t_address",
            "src": "contracts\\Land.sol:1459"
          },
          {
            "contract": "Land",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2599_storage)",
            "src": "contracts\\Land.sol:1466"
          }
        ],
        "types": {
          "t_struct(Counter)525_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2599_storage)": {
            "label": "mapping(uint256 => struct Land.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2599_storage": {
            "label": "struct Land.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "17877208d9205689b59323baa1557fb74c5d8fc4428c5e00ab0d6f5c288cccca": {
      "address": "0xb932C8342106776E73E39D695F3FFC3A9624eCE0",
      "txHash": "0xb3a2629dacf080ebfecd34cf1c7190da25d72dc610f063936fe386fe6f04424c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:427"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:432"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Presale.sol:489"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Presale.sol:513"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:556"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:779"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:782"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Presale.sol:785"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Presale.sol:788"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Presale.sol:791"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Presale.sol:794"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Presale.sol:1301"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Presale.sol:1314"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1317"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Presale.sol:1320"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1323"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Presale.sol:1490"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Presale.sol:1504"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:1572"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Presale.sol:1576"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:1642"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Presale.sol:1750"
          },
          {
            "contract": "Pack",
            "label": "_tokenIds",
            "type": "t_struct(Counter)526_storage",
            "src": "contracts\\Presale.sol:1839"
          },
          {
            "contract": "Pack",
            "label": "gameOpend",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:1841"
          },
          {
            "contract": "Pack",
            "label": "preSaleStarted",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:1842"
          },
          {
            "contract": "Pack",
            "label": "admin",
            "type": "t_address",
            "src": "contracts\\Presale.sol:1843"
          },
          {
            "contract": "Pack",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:1844"
          },
          {
            "contract": "Pack",
            "label": "SeedToken",
            "type": "t_contract(NonNFT)2679",
            "src": "contracts\\Presale.sol:1846"
          },
          {
            "contract": "Pack",
            "label": "SkinToken",
            "type": "t_contract(NonNFT)2679",
            "src": "contracts\\Presale.sol:1847"
          },
          {
            "contract": "Pack",
            "label": "SeedNFT",
            "type": "t_contract(INFT)2671",
            "src": "contracts\\Presale.sol:1848"
          },
          {
            "contract": "Pack",
            "label": "SkinNFT",
            "type": "t_contract(INFT)2671",
            "src": "contracts\\Presale.sol:1849"
          },
          {
            "contract": "Pack",
            "label": "LandNFT",
            "type": "t_contract(INFT)2671",
            "src": "contracts\\Presale.sol:1850"
          },
          {
            "contract": "Pack",
            "label": "BUSD",
            "type": "t_contract(IBEP20Upgradeable)2529",
            "src": "contracts\\Presale.sol:1851"
          },
          {
            "contract": "Pack",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Presale.sol:1853"
          },
          {
            "contract": "Pack",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1854"
          },
          {
            "contract": "Pack",
            "label": "_whitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Presale.sol:1855"
          },
          {
            "contract": "Pack",
            "label": "_packToMaxSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1856"
          },
          {
            "contract": "Pack",
            "label": "_packToCurrentSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1857"
          },
          {
            "contract": "Pack",
            "label": "_packToPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1858"
          },
          {
            "contract": "Pack",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2753_storage)",
            "src": "contracts\\Presale.sol:1865"
          }
        ],
        "types": {
          "t_struct(Counter)526_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(NonNFT)2679": {
            "label": "contract NonNFT"
          },
          "t_contract(INFT)2671": {
            "label": "contract INFT"
          },
          "t_contract(IBEP20Upgradeable)2529": {
            "label": "contract IBEP20Upgradeable"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2753_storage)": {
            "label": "mapping(uint256 => struct Pack.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2753_storage": {
            "label": "struct Pack.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c9cd9ca4db73aad222463e303c7c3eabe1d840ce6c7edc1612dc2c474c6ef3dd": {
      "address": "0x1D8D70AD07C8E7E442AD78E4AC0A16f958Eba7F0",
      "txHash": "0xf44dc38955feaec157141d04cf6e0e755d7901309cec47267a9b6811cf7c70ee",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:427"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:432"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Presale.sol:489"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Presale.sol:513"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:556"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:779"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:782"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Presale.sol:785"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Presale.sol:788"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Presale.sol:791"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Presale.sol:794"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Presale.sol:1301"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Presale.sol:1314"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1317"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Presale.sol:1320"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1323"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Presale.sol:1490"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Presale.sol:1504"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:1572"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Presale.sol:1576"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:1642"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Presale.sol:1750"
          },
          {
            "contract": "Pack",
            "label": "_tokenIds",
            "type": "t_struct(Counter)526_storage",
            "src": "contracts\\Presale.sol:1839"
          },
          {
            "contract": "Pack",
            "label": "gameOpend",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:1841"
          },
          {
            "contract": "Pack",
            "label": "preSaleStarted",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:1842"
          },
          {
            "contract": "Pack",
            "label": "admin",
            "type": "t_address",
            "src": "contracts\\Presale.sol:1843"
          },
          {
            "contract": "Pack",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:1844"
          },
          {
            "contract": "Pack",
            "label": "SeedToken",
            "type": "t_contract(NonNFT)2679",
            "src": "contracts\\Presale.sol:1846"
          },
          {
            "contract": "Pack",
            "label": "SkinToken",
            "type": "t_contract(NonNFT)2679",
            "src": "contracts\\Presale.sol:1847"
          },
          {
            "contract": "Pack",
            "label": "SeedNFT",
            "type": "t_contract(INFT)2671",
            "src": "contracts\\Presale.sol:1848"
          },
          {
            "contract": "Pack",
            "label": "SkinNFT",
            "type": "t_contract(INFT)2671",
            "src": "contracts\\Presale.sol:1849"
          },
          {
            "contract": "Pack",
            "label": "LandNFT",
            "type": "t_contract(INFT)2671",
            "src": "contracts\\Presale.sol:1850"
          },
          {
            "contract": "Pack",
            "label": "BUSD",
            "type": "t_contract(IBEP20Upgradeable)2529",
            "src": "contracts\\Presale.sol:1851"
          },
          {
            "contract": "Pack",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Presale.sol:1853"
          },
          {
            "contract": "Pack",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1854"
          },
          {
            "contract": "Pack",
            "label": "_whitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Presale.sol:1855"
          },
          {
            "contract": "Pack",
            "label": "_packToMaxSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1856"
          },
          {
            "contract": "Pack",
            "label": "_packToCurrentSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1857"
          },
          {
            "contract": "Pack",
            "label": "_packToPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1858"
          },
          {
            "contract": "Pack",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2753_storage)",
            "src": "contracts\\Presale.sol:1865"
          }
        ],
        "types": {
          "t_struct(Counter)526_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(NonNFT)2679": {
            "label": "contract NonNFT"
          },
          "t_contract(INFT)2671": {
            "label": "contract INFT"
          },
          "t_contract(IBEP20Upgradeable)2529": {
            "label": "contract IBEP20Upgradeable"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2753_storage)": {
            "label": "mapping(uint256 => struct Pack.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2753_storage": {
            "label": "struct Pack.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "106fcaa8011013b22452a11dffd51127c64aad790435833c48eebbea31702f92": {
      "address": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
      "txHash": "0xe16882cad0caa925e85f2dc6bf859ae08739f7721bb407332a1536a3227ccaef",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:427"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:432"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Presale.sol:489"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Presale.sol:513"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:556"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:779"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:782"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Presale.sol:789"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Presale.sol:792"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Presale.sol:795"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Presale.sol:798"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Presale.sol:1310"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Presale.sol:1323"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1326"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Presale.sol:1329"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1332"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Presale.sol:1499"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Presale.sol:1513"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:1581"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Presale.sol:1585"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:1651"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Presale.sol:1759"
          },
          {
            "contract": "Pack",
            "label": "_tokenIds",
            "type": "t_struct(Counter)526_storage",
            "src": "contracts\\Presale.sol:1848"
          },
          {
            "contract": "Pack",
            "label": "gameOpend",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:1850"
          },
          {
            "contract": "Pack",
            "label": "preSaleStarted",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:1851"
          },
          {
            "contract": "Pack",
            "label": "vaultAddress",
            "type": "t_address",
            "src": "contracts\\Presale.sol:1852"
          },
          {
            "contract": "Pack",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:1853"
          },
          {
            "contract": "Pack",
            "label": "SeedToken",
            "type": "t_contract(NonNFT)2694",
            "src": "contracts\\Presale.sol:1855"
          },
          {
            "contract": "Pack",
            "label": "SkinToken",
            "type": "t_contract(NonNFT)2694",
            "src": "contracts\\Presale.sol:1856"
          },
          {
            "contract": "Pack",
            "label": "SeedNFT",
            "type": "t_contract(INFT)2686",
            "src": "contracts\\Presale.sol:1857"
          },
          {
            "contract": "Pack",
            "label": "SkinNFT",
            "type": "t_contract(INFT)2686",
            "src": "contracts\\Presale.sol:1858"
          },
          {
            "contract": "Pack",
            "label": "LandNFT",
            "type": "t_contract(INFT)2686",
            "src": "contracts\\Presale.sol:1859"
          },
          {
            "contract": "Pack",
            "label": "BUSD",
            "type": "t_contract(IBEP20Upgradeable)2544",
            "src": "contracts\\Presale.sol:1860"
          },
          {
            "contract": "Pack",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Presale.sol:1862"
          },
          {
            "contract": "Pack",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1863"
          },
          {
            "contract": "Pack",
            "label": "_whitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Presale.sol:1864"
          },
          {
            "contract": "Pack",
            "label": "_packToMaxSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1865"
          },
          {
            "contract": "Pack",
            "label": "_packToCurrentSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1866"
          },
          {
            "contract": "Pack",
            "label": "_packToPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1867"
          },
          {
            "contract": "Pack",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2768_storage)",
            "src": "contracts\\Presale.sol:1874"
          }
        ],
        "types": {
          "t_struct(Counter)526_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(NonNFT)2694": {
            "label": "contract NonNFT"
          },
          "t_contract(INFT)2686": {
            "label": "contract INFT"
          },
          "t_contract(IBEP20Upgradeable)2544": {
            "label": "contract IBEP20Upgradeable"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2768_storage)": {
            "label": "mapping(uint256 => struct Pack.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2768_storage": {
            "label": "struct Pack.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
