{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x4C5a30BCAE34aF95167189C0B4246d954C46904A",
    "txHash": "0xfbd9df6671440c68bf3e9c3b80bcd5770e315c906e84aa6c77d6b71a2b6d412d",
    "deployTransaction": {
      "hash": "0xfbd9df6671440c68bf3e9c3b80bcd5770e315c906e84aa6c77d6b71a2b6d412d",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x588a4EB40604d71b65823B23aEFe6A0e289E5a3d",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x02540be400"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x075da0"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 11,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x05bafd7b1e964629e3f1fe62efdd74a41fbe9209d67448b608fff537fa71191b",
      "s": "0x26bce04b5f3c2b131c4e3397c988e6f4f58c2c1a53c145c18e8662dfe01065d8",
      "v": 230,
      "creates": "0x4C5a30BCAE34aF95167189C0B4246d954C46904A",
      "chainId": 97
    }
  },
  "proxies": [
    {
      "address": "0x061581D17eb3ea70818efD6ab2da1CE16060E433",
      "txHash": "0x451e1d43f4b95662ea89e85d7f0167780bf8a00d911bcbe32370820369a9b1f2",
      "kind": "transparent"
    },
    {
      "address": "0xf74eAAE9a1448DD31Ed8ffD0B4835c8cC232b02d",
      "txHash": "0x88bc89f61753646a8754f930ea48fc619550c3c4f6f29aaa080c8805ddb7d081",
      "kind": "transparent"
    },
    {
      "address": "0x27CB77cEc580B790e3345D3d25e77AA6B8aB255b",
      "txHash": "0x6432854cabe4341bbd254d85b781e0a7c866ad28352849e5e141d724e22f0f14",
      "kind": "transparent"
    },
    {
      "address": "0x9126447Bb2447B650a68F5f44750Aeb450a738Cf",
      "txHash": "0x72ebca8f37376e68db1268e8e27124eb0b0731653431d87d4afbfc5f7db646d1",
      "kind": "transparent"
    },
    {
      "address": "0xD5193305552947DfEbFC984E47d540C369BDaCa3",
      "txHash": "0x3b868077041396a2f08b6da4c53d8312e3711fc820a60b8100d1d11d4467f937",
      "kind": "transparent"
    },
    {
      "address": "0xE08FA8A463dc38eFE779DDE69AaC4C040CEC67Ea",
      "txHash": "0xe70dd6c99a89b926cb497ee39b46874b512b87a60d5ea26c8e87592ccc7ddff0",
      "kind": "transparent"
    },
    {
      "address": "0xf31d9DAa85ca28FA6cD08a2b5332D26BA1500e55",
      "txHash": "0x7df9f88f502c6d660f5a57507733f0a9ac1093717b77f6f6735faede38fab69f",
      "kind": "transparent"
    },
    {
      "address": "0x75d07B3e2556d76066a79b8d4Fea9209b0B40580",
      "txHash": "0xfbb895cf3924ec9dd531b59f69b267a24608b3ee3c79e0c39acedb4c4bda67c0",
      "kind": "transparent"
    },
    {
      "address": "0xdE675011d850bfB2b779D63Fc661637F8B8cf665",
      "txHash": "0x531ec4ad8de4c0e5cfba32c1146354a4849c64aceb0f5a440f755c4abd02f8e9",
      "kind": "transparent"
    },
    {
      "address": "0xACD02DF1dd35D81dE71b63eed2cD4fDA81c09BA5",
      "txHash": "0x81645ed1f6a0bb9c688ea94b87a807e6b146e4177396df1769492db215335cc6",
      "kind": "transparent"
    },
    {
      "address": "0xc6B4644a8Bb7aD686d2f451ab961bE6b1ff191a5",
      "txHash": "0x1a6560aeed9ecc5969232b28482bbf8a2113e82e9a2d141dad9a4bbfb2fdcb89",
      "kind": "transparent"
    },
    {
      "address": "0x81B237ad19727f5F5FE63342BF499F393107c466",
      "txHash": "0x989866c6de65fe0ec2f0b6b2cf1e5997db77552381f4cfe36131b0eb574238eb",
      "kind": "transparent"
    },
    {
      "address": "0x100D4ef14059887F5022c66671236AB6F47F337a",
      "txHash": "0xa7a09011331a032b946b41fde5248fb226009e2300c88ff955fe72598d65dd1a",
      "kind": "transparent"
    },
    {
      "address": "0x8c813D63b00261410Bf8dffee40FE209263Cc6C4",
      "txHash": "0x85c65a2c54055a4f84d1997e88336d03e70da4a28f2590bbfbd4f911ba4606c6",
      "kind": "transparent"
    },
    {
      "address": "0xEADC4666b9126586cdF2fFfBbb509513192049B7",
      "txHash": "0x19105bf2732d9160607176981b6fc31d0948e6c4ed42dbb0734b1346aef617f3",
      "kind": "transparent"
    },
    {
      "address": "0x79d4a35A1f0A9DfC17B755DAe730e7a010bE5aB0",
      "txHash": "0x1e832e7c70ca9eb5b3784ce7d7924657d6cebd4d7c9e95a676bf1bba956ebdd7",
      "kind": "transparent"
    },
    {
      "address": "0xf686b36CDA788511edAc45D950561CA960F45eDe",
      "txHash": "0x8b09a2f9003029139c2818fc6898c4c403026db0de2f891b1f5032994ef30c6b",
      "kind": "transparent"
    },
    {
      "address": "0xf4950db78652B4789B398C187b39e20295bAB2B1",
      "txHash": "0x0462cc2705e3bd8c58a06e96a0eff404d00eca396805c2a4ac2e4881aaa788ae",
      "kind": "transparent"
    },
    {
      "address": "0x6c801D99693Fa80d31Fb78f03232332ba80031bc",
      "txHash": "0xe0ec72ef7e24d2a0a98028dda054f795237a69647a9078eb71fd8769a410a5ce",
      "kind": "transparent"
    },
    {
      "address": "0xd5c8f17B498e073cE23B967Eb8e4A0AFfed8b3d0",
      "txHash": "0xe1360094d351a66c58b4872ed42a9257ded427576ff13c7da20d9f1f9333109f",
      "kind": "transparent"
    },
    {
      "address": "0xE3C08F5a7Ac8a1e07275a465d4ba2894f280213D",
      "txHash": "0xce88456ef83af203109b645eca0ae101c34ffd982bfbbe61e1618ed87f5384a5",
      "kind": "transparent"
    },
    {
      "address": "0x0eC1e25aEc752022Fb59adE2c7C65eC4aC030746",
      "txHash": "0x7d475a4eeb1022762bbaf98c1fbc49fa61c6bce1c30234d5646e42629cadcbcb",
      "kind": "transparent"
    },
    {
      "address": "0xC703a439F1083f63f5210C405247b7553B89e974",
      "txHash": "0x498456cfaf552cf3bafcb85337863b12773eb0634baed77cd1ead6e988090972",
      "kind": "transparent"
    },
    {
      "address": "0x24F8C2aF8A9e8e0Cc00431AC23178077ea5e42CE",
      "txHash": "0x7055c89b1466d934e7354b6398d23b206521cb748dead9a17de110186f759839",
      "kind": "transparent"
    },
    {
      "address": "0xFFC426999d39ed5fB60803c178328B502bCcCF92",
      "txHash": "0x372fe3bb310e5e1df5a77c2f59023ced59c1d103c0dcf665058825220a7e6b42",
      "kind": "transparent"
    },
    {
      "address": "0x3b02dCa161D9B22513Ff7a3FB04E4aaE57604a76",
      "txHash": "0xf93e6bb41ebe23469bf4397e1b9f55968cf24e5fc5d8c73c2de7d83f37002e1c",
      "kind": "transparent"
    },
    {
      "address": "0x361e995C206aB08111e1253350e942f731792944",
      "txHash": "0x594f0cc0d1262893b2ca3659afc7b0414261721f9c67f757469fb3b1da831d64",
      "kind": "transparent"
    },
    {
      "address": "0x512B4F54429ffa22656d2B35d838fEE9F6B1d6D3",
      "txHash": "0xd695822db79a6b253888eb98aa7fe71465b572630445dba3363fe7ed0473a331",
      "kind": "transparent"
    },
    {
      "address": "0xD0D293c8d2B4ff72204998d19Fdd6161494E84e6",
      "txHash": "0x52051a583432358966d292dbbf2081193d6e242f30d1bbadc5b4a295ade71489",
      "kind": "transparent"
    },
    {
      "address": "0x69db500e4d50F91CC59227426976B419393607a8",
      "txHash": "0xe8e191beec0d47ff6ff033955241a06e66e0522a907ec9c0520deb45615061bf",
      "kind": "transparent"
    },
    {
      "address": "0x3B007C2F6C648602eC45C4ac22B37f4A088e00d0",
      "txHash": "0xabef58d8ecc4e584a8f05f63bd6108c2a8818a1a35ea811d72f3ea31ec51e874",
      "kind": "transparent"
    },
    {
      "address": "0xAb4c454f16EDc5224e27c71747741633985a399c",
      "txHash": "0x44515ae65a02e6fbf87bfcaf329f293f4547cc827c1d5a94e60b5c1e46769696",
      "kind": "transparent"
    },
    {
      "address": "0xaedFEA91eE5bA32E6849DD0D75CBFd904b176f0c",
      "txHash": "0x2e898a7af33c69587503ffa2ece86707c8caaf7a1737881a7002625ac3302cb9",
      "kind": "transparent"
    },
    {
      "address": "0x735eF53d6ee644686BeB4F13A2e88291f5a3568c",
      "txHash": "0x6655d01d764189785655c8e73d53e4d6de110b4a7f16e16e60914a9b846d3253",
      "kind": "transparent"
    },
    {
      "address": "0x5d2E6383871ea3c336266c46D472678bd1D21cC9",
      "txHash": "0x2e63c08bc450ed52f0373464f8cfcba9c63a529efad27c69a7f0c7ecc13fe851",
      "kind": "transparent"
    },
    {
      "address": "0x1Ce90C54E61Fd870F6575A563720B90C0a38fECd",
      "txHash": "0x8390ac1eb09a9c0b2e94588ecd6552706c545368624d2a7b26706dbf181e4ea0",
      "kind": "transparent"
    },
    {
      "address": "0x9A99Cf00EF1A3A33Da215a7F7A3fCdcBb08792d6",
      "txHash": "0xd9a8e5ee2a4274d406c84c4fa3b0421b4df0eb58168566bc087e8ba37757c45a",
      "kind": "transparent"
    },
    {
      "address": "0x2CE1deBc3E05668Cb46285f5d70515A05E6DfdA9",
      "txHash": "0x6e0da17dee90c2829d9f44947837503ed1192b4a137be7cf9af5071d93490e70",
      "kind": "transparent"
    },
    {
      "address": "0x74939E54A9ef9B7D020bBFD0DFfE6F103d052D31",
      "txHash": "0x1efea568cd23bf91901fd93f74fcc55d9b22db3500a1589f33f587527542e2d2",
      "kind": "transparent"
    },
    {
      "address": "0xaBA93D14a32e686a9F788fF46d4147b25C59C4aB",
      "txHash": "0xbc6ee14d670a7bb8e2db80c5c632bcbff7acc72b67d6ca55645ed604627e19e4",
      "kind": "transparent"
    },
    {
      "address": "0x7bFf78d19E2643d202703943b82CFb2D822D430D",
      "txHash": "0x109a11447f19a0f9ce13b7df58d734170d7ce02fd3d1439f0a93a4c3c7a2e676",
      "kind": "transparent"
    },
    {
      "address": "0x7A27D4EA5E687e9420843A988712417404ee495A",
      "txHash": "0x8ffc3bf3af57d35989dd5fa0e8cb10531ca79e228a8ada81a65d5df737031546",
      "kind": "transparent"
    },
    {
      "address": "0xe99867c5ca11C0De1e5A7BCB2ba4B8B7aa4E6E2B",
      "txHash": "0xfb3309714569116317f7bb1e47ac032d68417c79ddca5c8f7bb0798bd51e455b",
      "kind": "transparent"
    },
    {
      "address": "0x0d7957E750125392A88BEc00781a391343d160F8",
      "txHash": "0xb86111dc9ddd089fb0c909064715c7a89883caae74dc706901b562888fbf35d4",
      "kind": "transparent"
    },
    {
      "address": "0xBcdFeCF07B865825D47D191bE4d44646010aAd9F",
      "txHash": "0x642d88b4a5d0c56f7c4d9ab79b349ab6a921009dd9707e38dbd88a42fc87d2aa",
      "kind": "transparent"
    },
    {
      "address": "0x6C3c0D2148D168B006b221846636d00f30Dc17FA",
      "txHash": "0x77a711d4800d90f695dca5e73b699656ff0be53166336e1e9a8155e88ecb900a",
      "kind": "transparent"
    },
    {
      "address": "0x8b2f6C56b49D2BB0c86d286edbA57C90AA52Fa3e",
      "txHash": "0xd475a08790890117b0f70e11c52d73885e7946e1810a1ece0e2d49740031a6be",
      "kind": "transparent"
    },
    {
      "address": "0xb9514Be81Ad73047039cF3d3a66a71eb6f19f77b",
      "txHash": "0xeb85f9ca857b0280010d7c985b42be99275b0003f3fd5be94f83cd714c763134",
      "kind": "transparent"
    },
    {
      "address": "0x0B97cb239dCb073181d597D21db56Ab5C768519e",
      "txHash": "0xffeb7e1834d660459521b385987934f964457354f105cb7fae90cc6c1eebecc7",
      "kind": "transparent"
    },
    {
      "address": "0x59A876de6281CdD63EaAd265a2550d97b264513D",
      "txHash": "0x364c3eee82c6d1d386c69f74dbc6a7f935d002001995ef428dd86b8c05f33183",
      "kind": "transparent"
    },
    {
      "address": "0x426EDD5f3F4d7468B1f60902d8A24F9e7B515c1C",
      "txHash": "0x7f9533e357e6b98dc61ecff3bb15ae3210516052bf98b7aeb1fb6673622c6186",
      "kind": "transparent"
    },
    {
      "address": "0xd88B161b47583cdAAE3d09ceB4C34E9403f0e02a",
      "txHash": "0x6215a21bfc80221f8d9efca3adfccb1616263071de26cb93c0c0eb09c67fd9e9",
      "kind": "transparent"
    }
  ],
  "impls": {
    "8319a3fadf7be981b42c2622e56d4f98b63da9e541e0ec9bfbd875f16710b527": {
      "address": "0x171c6957E53E5D66999840D762E066b9585aCB53",
      "txHash": "0x35006617997a697b93a65c529400887c93e35f29bca108428f13b86210de0408",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Skin.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Skin.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Skin.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Skin.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Skin.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Skin.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Skin.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Skin.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Skin.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Skin.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Skin.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Skin.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Skin.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Skin.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Skin.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Skin.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Skin.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Skin.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Skin.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Skin.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Skin.sol:1376"
          },
          {
            "contract": "Seed",
            "label": "_tokenIds",
            "type": "t_struct(Counter)4957_storage",
            "src": "contracts\\Seed.sol:1382"
          },
          {
            "contract": "Seed",
            "label": "_maxSupply",
            "type": "t_uint256",
            "src": "contracts\\Seed.sol:1384"
          },
          {
            "contract": "Seed",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Seed.sol:1385"
          },
          {
            "contract": "Seed",
            "label": "_whitelisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Seed.sol:1386"
          },
          {
            "contract": "Seed",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Seed.sol:1387"
          },
          {
            "contract": "Seed",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Seed.sol:1388"
          },
          {
            "contract": "Seed",
            "label": "admin",
            "type": "t_address",
            "src": "contracts\\Seed.sol:1390"
          },
          {
            "contract": "Seed",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)6903_storage)",
            "src": "contracts\\Seed.sol:1397"
          }
        ],
        "types": {
          "t_struct(Counter)4957_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)6903_storage)": {
            "label": "mapping(uint256 => struct Seed.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)6903_storage": {
            "label": "struct Seed.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f1acc9e7b2d10e47d0adc196bfdfbfb025660275fca627a9e37db50ccc9d1f2e": {
      "address": "0x8F1C2D4d2dB879f7831d77Ee3D9c027816baEF04",
      "txHash": "0x90ca13cf9e0d3e6244be9b2ed9b0b0298da57247070626ac72c2a201f2c7a64a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Skin.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Skin.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Skin.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Skin.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Skin.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Skin.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Skin.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Skin.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Skin.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Skin.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Skin.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Skin.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Skin.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Skin.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Skin.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Skin.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Skin.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Skin.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Skin.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Skin.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Skin.sol:1376"
          },
          {
            "contract": "Skin",
            "label": "_tokenIds",
            "type": "t_struct(Counter)8023_storage",
            "src": "contracts\\Skin.sol:1382"
          },
          {
            "contract": "Skin",
            "label": "_maxSupply",
            "type": "t_uint256",
            "src": "contracts\\Skin.sol:1384"
          },
          {
            "contract": "Skin",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Skin.sol:1385"
          },
          {
            "contract": "Skin",
            "label": "_whitelisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Skin.sol:1386"
          },
          {
            "contract": "Skin",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Skin.sol:1387"
          },
          {
            "contract": "Skin",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Skin.sol:1388"
          },
          {
            "contract": "Skin",
            "label": "admin",
            "type": "t_address",
            "src": "contracts\\Skin.sol:1390"
          },
          {
            "contract": "Skin",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)9969_storage)",
            "src": "contracts\\Skin.sol:1397"
          }
        ],
        "types": {
          "t_struct(Counter)8023_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)9969_storage)": {
            "label": "mapping(uint256 => struct Skin.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)9969_storage": {
            "label": "struct Skin.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "060fbc633246adfd282e4cd900aa00a3b63028d76093e26341046e33e926528e": {
      "address": "0x1D8b6e12F8B808D7D8a15f67ffcA5512479778Ff",
      "txHash": "0x0448336fadd04f605b97057512e2f6d567ed983223fa9272e3bcb5f4e9568a73",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Skin.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Skin.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Skin.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Skin.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Skin.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Skin.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Skin.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Skin.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Skin.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Skin.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Skin.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Skin.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Skin.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Skin.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Skin.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Skin.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Skin.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Skin.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Skin.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Skin.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Skin.sol:1376"
          },
          {
            "contract": "Land",
            "label": "_tokenIds",
            "type": "t_struct(Counter)574_storage",
            "src": "contracts\\Land.sol:1382"
          },
          {
            "contract": "Land",
            "label": "_maxSupply",
            "type": "t_uint256",
            "src": "contracts\\Land.sol:1384"
          },
          {
            "contract": "Land",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Land.sol:1385"
          },
          {
            "contract": "Land",
            "label": "_whitelisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Land.sol:1386"
          },
          {
            "contract": "Land",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Land.sol:1387"
          },
          {
            "contract": "Land",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Land.sol:1388"
          },
          {
            "contract": "Land",
            "label": "admin",
            "type": "t_address",
            "src": "contracts\\Land.sol:1390"
          },
          {
            "contract": "Land",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2520_storage)",
            "src": "contracts\\Land.sol:1397"
          }
        ],
        "types": {
          "t_struct(Counter)574_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2520_storage)": {
            "label": "mapping(uint256 => struct Land.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2520_storage": {
            "label": "struct Land.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9c610cb8a2351f1861cb8e0d71ae8886be2bd2cee6c71a2bc60ea37e7428884f": {
      "address": "0x9eBC34aF418B08a7cE52fa0e2e1308bC4d0D91e3",
      "txHash": "0x1623c29ca537d351b098ae27085677dbe603f86bd2c68a66cbe7ad78c3584ee0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Seed.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Seed.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Seed.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Seed.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Seed.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Seed.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Seed.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Seed.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Seed.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Seed.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Seed.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Seed.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Seed.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Seed.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Seed.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Seed.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Seed.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Seed.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Seed.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Seed.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Seed.sol:1376"
          },
          {
            "contract": "SeedV2",
            "label": "_tokenIds",
            "type": "t_struct(Counter)525_storage",
            "src": "contracts\\Seed.sol:1382"
          },
          {
            "contract": "SeedV2",
            "label": "_maxSupply",
            "type": "t_uint256",
            "src": "contracts\\Seed.sol:1384"
          },
          {
            "contract": "SeedV2",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Seed.sol:1385"
          },
          {
            "contract": "SeedV2",
            "label": "_whitelisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Seed.sol:1386"
          },
          {
            "contract": "SeedV2",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Seed.sol:1387"
          },
          {
            "contract": "SeedV2",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Seed.sol:1388"
          },
          {
            "contract": "SeedV2",
            "label": "admin",
            "type": "t_address",
            "src": "contracts\\Seed.sol:1390"
          },
          {
            "contract": "SeedV2",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2471_storage)",
            "src": "contracts\\Seed.sol:1397"
          }
        ],
        "types": {
          "t_struct(Counter)525_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2471_storage)": {
            "label": "mapping(uint256 => struct SeedV2.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2471_storage": {
            "label": "struct SeedV2.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "47a01f9d63bcf2a805fd8c8f32b35f77812c44371c3d63e10b43996ad1febbb0": {
      "address": "0xAeE8128B1e67E6ddccA407e665ae80F344Ed86cD",
      "txHash": "0x90f261895ee35bfd559d65ce206a9eb0473a654bb4aa11864cb081308a4e6350",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Seed.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Seed.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Seed.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Seed.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Seed.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Seed.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Seed.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Seed.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Seed.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Seed.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Seed.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Seed.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Seed.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Seed.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Seed.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Seed.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Seed.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Seed.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Seed.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Seed.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Seed.sol:1376"
          },
          {
            "contract": "SeedV2",
            "label": "_tokenIds",
            "type": "t_struct(Counter)525_storage",
            "src": "contracts\\Seed.sol:1382"
          },
          {
            "contract": "SeedV2",
            "label": "_maxSupply",
            "type": "t_uint256",
            "src": "contracts\\Seed.sol:1384"
          },
          {
            "contract": "SeedV2",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Seed.sol:1385"
          },
          {
            "contract": "SeedV2",
            "label": "_whitelisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Seed.sol:1386"
          },
          {
            "contract": "SeedV2",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Seed.sol:1387"
          },
          {
            "contract": "SeedV2",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Seed.sol:1388"
          },
          {
            "contract": "SeedV2",
            "label": "admin",
            "type": "t_address",
            "src": "contracts\\Seed.sol:1390"
          },
          {
            "contract": "SeedV2",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2471_storage)",
            "src": "contracts\\Seed.sol:1397"
          }
        ],
        "types": {
          "t_struct(Counter)525_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2471_storage)": {
            "label": "mapping(uint256 => struct SeedV2.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2471_storage": {
            "label": "struct SeedV2.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2c5e4a5bf00b47b40989a4d6d1c1f104bdea13087a066242e69bb257f8680b04": {
      "address": "0x8fc218d1057DB0B118aFf4E73e87C622682b8Bad",
      "txHash": "0xcb21fba742a8a4d1e3a18d28ee06fbd4ce9cd4963e702d0b25fc92c6d5d348d2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Whitelist.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Whitelist.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Whitelist.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Whitelist.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Whitelist.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Whitelist.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Whitelist.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Whitelist.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Whitelist.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Whitelist.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Whitelist.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Whitelist.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Whitelist.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Whitelist.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Whitelist.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Whitelist.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Whitelist.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Whitelist.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Whitelist.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Whitelist.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Whitelist.sol:1376"
          },
          {
            "contract": "Seed",
            "label": "_tokenIds",
            "type": "t_struct(Counter)5147_storage",
            "src": "contracts\\Seed.sol:1382"
          },
          {
            "contract": "Seed",
            "label": "_maxSupply",
            "type": "t_uint256",
            "src": "contracts\\Seed.sol:1384"
          },
          {
            "contract": "Seed",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Seed.sol:1385"
          },
          {
            "contract": "Seed",
            "label": "_whitelisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Seed.sol:1386"
          },
          {
            "contract": "Seed",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Seed.sol:1387"
          },
          {
            "contract": "Seed",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Seed.sol:1388"
          },
          {
            "contract": "Seed",
            "label": "admin",
            "type": "t_address",
            "src": "contracts\\Seed.sol:1390"
          },
          {
            "contract": "Seed",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)7093_storage)",
            "src": "contracts\\Seed.sol:1397"
          }
        ],
        "types": {
          "t_struct(Counter)5147_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)7093_storage)": {
            "label": "mapping(uint256 => struct Seed.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)7093_storage": {
            "label": "struct Seed.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c462ab4ef5bf8d7255c658d25c7542c21361ec8fff345d8654ab4db1a1c84eca": {
      "address": "0x65eD66b0d8Db314EBb62FE208f044A04b1a7fF7f",
      "txHash": "0x055ee63c96d8214565ff190ced6ff1cc4b4f4f35599a1b7297c3545a08a664d3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Whitelist.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Whitelist.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Whitelist.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Whitelist.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Whitelist.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Whitelist.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Whitelist.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Whitelist.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Whitelist.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Whitelist.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Whitelist.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Whitelist.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Whitelist.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Whitelist.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Whitelist.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Whitelist.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Whitelist.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Whitelist.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Whitelist.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Whitelist.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Whitelist.sol:1376"
          },
          {
            "contract": "Skin",
            "label": "_tokenIds",
            "type": "t_struct(Counter)8213_storage",
            "src": "contracts\\Skin.sol:1382"
          },
          {
            "contract": "Skin",
            "label": "_maxSupply",
            "type": "t_uint256",
            "src": "contracts\\Skin.sol:1384"
          },
          {
            "contract": "Skin",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Skin.sol:1385"
          },
          {
            "contract": "Skin",
            "label": "_whitelisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Skin.sol:1386"
          },
          {
            "contract": "Skin",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Skin.sol:1387"
          },
          {
            "contract": "Skin",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Skin.sol:1388"
          },
          {
            "contract": "Skin",
            "label": "admin",
            "type": "t_address",
            "src": "contracts\\Skin.sol:1390"
          },
          {
            "contract": "Skin",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)10159_storage)",
            "src": "contracts\\Skin.sol:1397"
          }
        ],
        "types": {
          "t_struct(Counter)8213_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)10159_storage)": {
            "label": "mapping(uint256 => struct Skin.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)10159_storage": {
            "label": "struct Skin.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7eddddaf4071c73dc79a6196443ca46745898bdd1f2de7e6028c78b85291ce56": {
      "address": "0xCb2b0CC65C7F818709971Df200ECDeFF4fF0358d",
      "txHash": "0x89c2dfc6ee944b05b5984882c0d9866ad28a57a84e6825e466d6bb2ecffdec5d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Whitelist.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Whitelist.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Whitelist.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Whitelist.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Whitelist.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Whitelist.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Whitelist.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Whitelist.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Whitelist.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Whitelist.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Whitelist.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Whitelist.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Whitelist.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Whitelist.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Whitelist.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Whitelist.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Whitelist.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Whitelist.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Whitelist.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Whitelist.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Whitelist.sol:1376"
          },
          {
            "contract": "Land",
            "label": "_tokenIds",
            "type": "t_struct(Counter)2081_storage",
            "src": "contracts\\Land.sol:1382"
          },
          {
            "contract": "Land",
            "label": "_maxSupply",
            "type": "t_uint256",
            "src": "contracts\\Land.sol:1384"
          },
          {
            "contract": "Land",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Land.sol:1385"
          },
          {
            "contract": "Land",
            "label": "_whitelisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Land.sol:1386"
          },
          {
            "contract": "Land",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Land.sol:1387"
          },
          {
            "contract": "Land",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Land.sol:1388"
          },
          {
            "contract": "Land",
            "label": "admin",
            "type": "t_address",
            "src": "contracts\\Land.sol:1390"
          },
          {
            "contract": "Land",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)4027_storage)",
            "src": "contracts\\Land.sol:1397"
          }
        ],
        "types": {
          "t_struct(Counter)2081_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)4027_storage)": {
            "label": "mapping(uint256 => struct Land.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)4027_storage": {
            "label": "struct Land.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "026e53374d641e0c88e7a2d9b751cf0b46ccff05f3dafe37c002049add2a2e05": {
      "address": "0x2FFE615c75d352a7865112D0bd93aBC408b7B34f",
      "txHash": "0x2e99424fd7e98182fdedad57b4f9dfe52d65e0bdc6dae831f1b1013e78ffc069",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Whitelist.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Whitelist.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Whitelist.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Whitelist.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Whitelist.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Whitelist.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Whitelist.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Whitelist.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Whitelist.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Whitelist.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Whitelist.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Whitelist.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Whitelist.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Whitelist.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Whitelist.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Whitelist.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Whitelist.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Whitelist.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Whitelist.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Whitelist.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Whitelist.sol:1376"
          },
          {
            "contract": "Whitelist",
            "label": "_tokenIds",
            "type": "t_struct(Counter)11279_storage",
            "src": "contracts\\Whitelist.sol:1382"
          },
          {
            "contract": "Whitelist",
            "label": "_maxSupply",
            "type": "t_uint256",
            "src": "contracts\\Whitelist.sol:1384"
          },
          {
            "contract": "Whitelist",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Whitelist.sol:1385"
          },
          {
            "contract": "Whitelist",
            "label": "_whitelisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Whitelist.sol:1386"
          },
          {
            "contract": "Whitelist",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Whitelist.sol:1387"
          },
          {
            "contract": "Whitelist",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Whitelist.sol:1388"
          },
          {
            "contract": "Whitelist",
            "label": "admin",
            "type": "t_address",
            "src": "contracts\\Whitelist.sol:1390"
          },
          {
            "contract": "Whitelist",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)13225_storage)",
            "src": "contracts\\Whitelist.sol:1397"
          }
        ],
        "types": {
          "t_struct(Counter)11279_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)13225_storage)": {
            "label": "mapping(uint256 => struct Whitelist.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)13225_storage": {
            "label": "struct Whitelist.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d5c91edfe41ca1f14900b6166a0a4d32c2a6676804e2dcfe7aff3a2221e0b04b": {
      "address": "0x9aB199Ab2Bed48d85B1142528707d5Fa4cfAe0Cd",
      "txHash": "0x5638db5431be73255419f8796ec7edff2cc1e76b511479cf749347cda426e870",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Whitelist.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Whitelist.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Whitelist.sol:421"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Game.sol:485"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Game.sol:487"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts\\Game.sol:489"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Game.sol:491"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Game.sol:492"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts\\Game.sol:823"
          },
          {
            "contract": "Game",
            "label": "seedNFT",
            "type": "t_contract(INFT)11",
            "src": "contracts\\Game.sol:829"
          },
          {
            "contract": "Game",
            "label": "skinNFT",
            "type": "t_contract(INFT)11",
            "src": "contracts\\Game.sol:830"
          },
          {
            "contract": "Game",
            "label": "landNFT",
            "type": "t_contract(INFT)11",
            "src": "contracts\\Game.sol:831"
          },
          {
            "contract": "Game",
            "label": "whitelistNFT",
            "type": "t_contract(INFT)11",
            "src": "contracts\\Game.sol:832"
          }
        ],
        "types": {
          "t_contract(INFT)11": {
            "label": "contract INFT"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "35e0ed0f58a910ac36447dc98893442a4651790d541e5b9100dc7f69c1adb83e": {
      "address": "0xA221363B7B8195CdE38186aE921Cba27553C2309",
      "txHash": "0x6b72fcc83e407d422c1028565fc59aa23f3a5e23bd838c808ed6af289d61ba0c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Game.sol:314"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Game.sol:319"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Game.sol:389"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Game.sol:485"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Game.sol:487"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts\\Game.sol:489"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Game.sol:491"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Game.sol:492"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts\\Game.sol:823"
          },
          {
            "contract": "Game",
            "label": "seedNFT",
            "type": "t_contract(INFT)11",
            "src": "contracts\\Game.sol:829"
          },
          {
            "contract": "Game",
            "label": "skinNFT",
            "type": "t_contract(INFT)11",
            "src": "contracts\\Game.sol:830"
          },
          {
            "contract": "Game",
            "label": "landNFT",
            "type": "t_contract(INFT)11",
            "src": "contracts\\Game.sol:831"
          },
          {
            "contract": "Game",
            "label": "whitelistNFT",
            "type": "t_contract(INFT)11",
            "src": "contracts\\Game.sol:832"
          },
          {
            "contract": "Game",
            "label": "whitelistes",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\Game.sol:834"
          }
        ],
        "types": {
          "t_contract(INFT)11": {
            "label": "contract INFT"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "bc979d78c7806311987d133a508e250f365bcff698d438189dff8ed1f91d30f1": {
      "address": "0x3cc8ce4ca963d9bAC7D0a3b024B69b0C9b664253",
      "txHash": "0x597c4a2b5cd7f10f6da753b62168839baf709a1e37e3ff22d62aae9f2d08b3ce",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Game.sol:314"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Game.sol:319"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Game.sol:389"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Game.sol:485"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Game.sol:487"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts\\Game.sol:489"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Game.sol:491"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Game.sol:492"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts\\Game.sol:823"
          },
          {
            "contract": "Game",
            "label": "seedNFT",
            "type": "t_contract(INFT)11",
            "src": "contracts\\Game.sol:829"
          },
          {
            "contract": "Game",
            "label": "skinNFT",
            "type": "t_contract(INFT)11",
            "src": "contracts\\Game.sol:830"
          },
          {
            "contract": "Game",
            "label": "landNFT",
            "type": "t_contract(INFT)11",
            "src": "contracts\\Game.sol:831"
          },
          {
            "contract": "Game",
            "label": "whitelistNFT",
            "type": "t_contract(INFT)11",
            "src": "contracts\\Game.sol:832"
          },
          {
            "contract": "Game",
            "label": "whitelistes",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\Game.sol:834"
          },
          {
            "contract": "Game",
            "label": "whitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Game.sol:835"
          },
          {
            "contract": "Game",
            "label": "whitelistLength",
            "type": "t_uint256",
            "src": "contracts\\Game.sol:836"
          }
        ],
        "types": {
          "t_contract(INFT)11": {
            "label": "contract INFT"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "71beae8a7dd4ae46aa850ae770d8fb101b3637f8e20edcfb59ee8ec8206f2934": {
      "address": "0x82c4E99b59592F15Cb9bb1FA74c9074a16768b64",
      "txHash": "0x75c6a8dfcb4f7760d99029b33d50a3db8dc3aadc81308e83992c1769b20516b4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Non-NFTSeed.sol:334"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Non-NFTSeed.sol:339"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Non-NFTSeed.sol:391"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Non-NFTSeed.sol:551"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Non-NFTSeed.sol:553"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts\\Non-NFTSeed.sol:555"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSeed.sol:557"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSeed.sol:558"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts\\Non-NFTSeed.sol:876"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Non-NFTSeed.sol:395"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Non-NFTSeed.sol:455"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Non-NFTSeed.sol:880"
          },
          {
            "contract": "NSeed",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSeed.sol:953"
          },
          {
            "contract": "NSeed",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSeed.sol:954"
          },
          {
            "contract": "NSeed",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "contracts\\Non-NFTSeed.sol:955"
          },
          {
            "contract": "NSeed",
            "label": "minter",
            "type": "t_address",
            "src": "contracts\\Non-NFTSeed.sol:957"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "be8e15789beb78bda2fde9a4b7fb7e805ae5b793fb893f9cdc4aa77f17a7534f": {
      "address": "0xFe4063942f7b2eAe4E9e30a3B2cF8e2fA3b22B2B",
      "txHash": "0x3709eeb648c58b5dbb36d1b5aa32276c4c818fd697c78f1298031ecbaf3e1f5e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Non-NFTSkin.sol:334"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Non-NFTSkin.sol:339"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Non-NFTSkin.sol:391"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Non-NFTSkin.sol:551"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Non-NFTSkin.sol:553"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts\\Non-NFTSkin.sol:555"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSkin.sol:557"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSkin.sol:558"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts\\Non-NFTSkin.sol:876"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Non-NFTSkin.sol:395"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Non-NFTSkin.sol:455"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Non-NFTSkin.sol:880"
          },
          {
            "contract": "NSkin",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSkin.sol:953"
          },
          {
            "contract": "NSkin",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSkin.sol:954"
          },
          {
            "contract": "NSkin",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "contracts\\Non-NFTSkin.sol:955"
          },
          {
            "contract": "NSkin",
            "label": "minter",
            "type": "t_address",
            "src": "contracts\\Non-NFTSkin.sol:957"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1b43dc709dc0bf10ad9b599ff3c552269c7c13624820a194d29e6ac1143872d9": {
      "address": "0x02Fb840D914B8Bab314F1400940538ae1B4CFD88",
      "txHash": "0xbd416b24fe9923089763ef6ac0c8010fdc83a16e2725def3d8661293d16cf519",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Seed.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Seed.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Seed.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Seed.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Seed.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Seed.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Seed.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Seed.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Seed.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Seed.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Seed.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Seed.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Seed.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Seed.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Seed.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Seed.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Seed.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Seed.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Seed.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Seed.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Seed.sol:1376"
          },
          {
            "contract": "Seed",
            "label": "_tokenIds",
            "type": "t_struct(Counter)525_storage",
            "src": "contracts\\Seed.sol:1382"
          },
          {
            "contract": "Seed",
            "label": "_maxSupply",
            "type": "t_uint256",
            "src": "contracts\\Seed.sol:1384"
          },
          {
            "contract": "Seed",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Seed.sol:1385"
          },
          {
            "contract": "Seed",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Seed.sol:1386"
          },
          {
            "contract": "Seed",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Seed.sol:1387"
          },
          {
            "contract": "Seed",
            "label": "minter",
            "type": "t_address",
            "src": "contracts\\Seed.sol:1389"
          },
          {
            "contract": "Seed",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2467_storage)",
            "src": "contracts\\Seed.sol:1396"
          }
        ],
        "types": {
          "t_struct(Counter)525_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2467_storage)": {
            "label": "mapping(uint256 => struct Seed.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2467_storage": {
            "label": "struct Seed.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ea10e0781257c4a4f6464981ceba360e539672bb9ef47602aeb170aefd5998c7": {
      "address": "0xeF3699d113Fcd6072ae735B0AE2F3B9ceA0F0d16",
      "txHash": "0x5de75e641df3595f974a075abdab7465ea9cc60989ad42c64a09de27334ea1f1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Skin.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Skin.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Skin.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Skin.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Skin.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Skin.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Skin.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Skin.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Skin.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Skin.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Skin.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Skin.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Skin.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Skin.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Skin.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Skin.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Skin.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Skin.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Skin.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Skin.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Skin.sol:1376"
          },
          {
            "contract": "Skin",
            "label": "_tokenIds",
            "type": "t_struct(Counter)525_storage",
            "src": "contracts\\Skin.sol:1382"
          },
          {
            "contract": "Skin",
            "label": "_maxSupply",
            "type": "t_uint256",
            "src": "contracts\\Skin.sol:1384"
          },
          {
            "contract": "Skin",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Skin.sol:1385"
          },
          {
            "contract": "Skin",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Skin.sol:1386"
          },
          {
            "contract": "Skin",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Skin.sol:1387"
          },
          {
            "contract": "Skin",
            "label": "minter",
            "type": "t_address",
            "src": "contracts\\Skin.sol:1389"
          },
          {
            "contract": "Skin",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2467_storage)",
            "src": "contracts\\Skin.sol:1396"
          }
        ],
        "types": {
          "t_struct(Counter)525_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2467_storage)": {
            "label": "mapping(uint256 => struct Skin.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2467_storage": {
            "label": "struct Skin.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "abe9de8a96be8c43dcc5b87e0feb28aaf8bab62eef271a1362fcdaa2b8b0795f": {
      "address": "0x1D81b40bE670f682804CF8c507a2BF8285756073",
      "txHash": "0x2b82f73264a52f2875c9eeee775565f2d367d4f5d1a7180d4928c9a05c39b29f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Land.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Land.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Land.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Land.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Land.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Land.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Land.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Land.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Land.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Land.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Land.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Land.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Land.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Land.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Land.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Land.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Land.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Land.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Land.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Land.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Land.sol:1376"
          },
          {
            "contract": "Land",
            "label": "_tokenIds",
            "type": "t_struct(Counter)525_storage",
            "src": "contracts\\Land.sol:1382"
          },
          {
            "contract": "Land",
            "label": "_maxSupply",
            "type": "t_uint256",
            "src": "contracts\\Land.sol:1384"
          },
          {
            "contract": "Land",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Land.sol:1385"
          },
          {
            "contract": "Land",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Land.sol:1386"
          },
          {
            "contract": "Land",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Land.sol:1387"
          },
          {
            "contract": "Land",
            "label": "minter",
            "type": "t_address",
            "src": "contracts\\Land.sol:1389"
          },
          {
            "contract": "Land",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2467_storage)",
            "src": "contracts\\Land.sol:1396"
          }
        ],
        "types": {
          "t_struct(Counter)525_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2467_storage)": {
            "label": "mapping(uint256 => struct Land.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2467_storage": {
            "label": "struct Land.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1c35362f2bfac5b4bb7be65a19f9801f38049ddc4b30f306e437a4b913dd4791": {
      "address": "0xC0600Cb7DCE637ed8469434A27d7f88caf6D038E",
      "txHash": "0xcdf13a1341183d58595fb7e5531cad48c3c8b2c91def6f14e2a24c4dabd103a6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Presale.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Presale.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Presale.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Presale.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Presale.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Presale.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Presale.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Presale.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Presale.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Presale.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Presale.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Presale.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:1376"
          },
          {
            "contract": "Pack",
            "label": "_tokenIds",
            "type": "t_struct(Counter)525_storage",
            "src": "contracts\\Presale.sol:1485"
          },
          {
            "contract": "Pack",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:1487"
          },
          {
            "contract": "Pack",
            "label": "admin",
            "type": "t_address",
            "src": "contracts\\Presale.sol:1488"
          },
          {
            "contract": "Pack",
            "label": "SeedToken",
            "type": "t_contract(NonNFT)2546",
            "src": "contracts\\Presale.sol:1490"
          },
          {
            "contract": "Pack",
            "label": "SkinToken",
            "type": "t_contract(NonNFT)2546",
            "src": "contracts\\Presale.sol:1491"
          },
          {
            "contract": "Pack",
            "label": "SeedNFT",
            "type": "t_contract(INFT)2538",
            "src": "contracts\\Presale.sol:1492"
          },
          {
            "contract": "Pack",
            "label": "SkinNFT",
            "type": "t_contract(INFT)2538",
            "src": "contracts\\Presale.sol:1493"
          },
          {
            "contract": "Pack",
            "label": "LandNFT",
            "type": "t_contract(INFT)2538",
            "src": "contracts\\Presale.sol:1494"
          },
          {
            "contract": "Pack",
            "label": "BUSD",
            "type": "t_contract(IBEP20Upgradeable)2528",
            "src": "contracts\\Presale.sol:1495"
          },
          {
            "contract": "Pack",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Presale.sol:1498"
          },
          {
            "contract": "Pack",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1499"
          },
          {
            "contract": "Pack",
            "label": "_whitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Presale.sol:1500"
          },
          {
            "contract": "Pack",
            "label": "_packToMaxSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1501"
          },
          {
            "contract": "Pack",
            "label": "_packToCurrentSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1502"
          },
          {
            "contract": "Pack",
            "label": "_packToPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1503"
          },
          {
            "contract": "Pack",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2616_storage)",
            "src": "contracts\\Presale.sol:1510"
          }
        ],
        "types": {
          "t_struct(Counter)525_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(NonNFT)2546": {
            "label": "contract NonNFT"
          },
          "t_contract(INFT)2538": {
            "label": "contract INFT"
          },
          "t_contract(IBEP20Upgradeable)2528": {
            "label": "contract IBEP20Upgradeable"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2616_storage)": {
            "label": "mapping(uint256 => struct Pack.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2616_storage": {
            "label": "struct Pack.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "32436ca1df56b53f3b934ad35ad6e2ca0edbd23b8b36f8d14463575d866c9475": {
      "address": "0xAFfaFAF891A1c9200a1CC9Bd27A49C9dcC3945E9",
      "txHash": "0x36c6ae4db08fe64899a656a51c039a2ddeff34ff2eab8ed534ca03a42336761d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Non-NFTSeed.sol:334"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Non-NFTSeed.sol:339"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Non-NFTSeed.sol:391"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Non-NFTSeed.sol:551"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Non-NFTSeed.sol:553"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts\\Non-NFTSeed.sol:555"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSeed.sol:557"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSeed.sol:558"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts\\Non-NFTSeed.sol:876"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Non-NFTSeed.sol:395"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Non-NFTSeed.sol:455"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Non-NFTSeed.sol:880"
          },
          {
            "contract": "NSeed",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSeed.sol:953"
          },
          {
            "contract": "NSeed",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSeed.sol:954"
          },
          {
            "contract": "NSeed",
            "label": "minter",
            "type": "t_address",
            "src": "contracts\\Non-NFTSeed.sol:956"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b84b4d895a08f664f9ab9a7a7a5f8833c45e36389658ca56f9876665b21b8596": {
      "address": "0xfA7AAce474bfe25B5113d1A055Bb99A826B766E3",
      "txHash": "0x0d5412446ebf14da87825b40fa2cfdf4e2c545c9a4d0101ac7d036076b36cc62",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Non-NFTSkin.sol:334"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Non-NFTSkin.sol:339"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Non-NFTSkin.sol:391"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Non-NFTSkin.sol:551"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Non-NFTSkin.sol:553"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts\\Non-NFTSkin.sol:555"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSkin.sol:557"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSkin.sol:558"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts\\Non-NFTSkin.sol:876"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Non-NFTSkin.sol:395"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Non-NFTSkin.sol:455"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Non-NFTSkin.sol:880"
          },
          {
            "contract": "NSkin",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSkin.sol:953"
          },
          {
            "contract": "NSkin",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Non-NFTSkin.sol:954"
          },
          {
            "contract": "NSkin",
            "label": "minter",
            "type": "t_address",
            "src": "contracts\\Non-NFTSkin.sol:956"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0ed8d7334e2553bd1d011809e3dffe89ba3ed3cbb853acf6b3dc54fdb2d89288": {
      "address": "0x3a5A5E7c32F328a9d566F47c46bDeE824e8fb65f",
      "txHash": "0x004e3925c39ee622e7ea264df7ecf8fac3b2fcc9aecda0fc2a38e0100fe7952a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Seed.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Seed.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Seed.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Seed.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Seed.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Seed.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Seed.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Seed.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Seed.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Seed.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Seed.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Seed.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Seed.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Seed.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Seed.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Seed.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Seed.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Seed.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Seed.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Seed.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Seed.sol:1376"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Seed.sol:1380"
          },
          {
            "contract": "Seed",
            "label": "_tokenIds",
            "type": "t_struct(Counter)525_storage",
            "src": "contracts\\Seed.sol:1452"
          },
          {
            "contract": "Seed",
            "label": "_maxSupply",
            "type": "t_uint256",
            "src": "contracts\\Seed.sol:1454"
          },
          {
            "contract": "Seed",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Seed.sol:1455"
          },
          {
            "contract": "Seed",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Seed.sol:1456"
          },
          {
            "contract": "Seed",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Seed.sol:1457"
          },
          {
            "contract": "Seed",
            "label": "minter",
            "type": "t_address",
            "src": "contracts\\Seed.sol:1459"
          },
          {
            "contract": "Seed",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2599_storage)",
            "src": "contracts\\Seed.sol:1466"
          }
        ],
        "types": {
          "t_struct(Counter)525_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2599_storage)": {
            "label": "mapping(uint256 => struct Seed.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2599_storage": {
            "label": "struct Seed.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0ce9500a490cc2bdc5511b1a6b0074efb845d2c527b73a93df2072af7aeda67d": {
      "address": "0xBa1571691C6EE1BaD731105434987a4A5a18F808",
      "txHash": "0x3e002aebed807ac09531ad7fc2859815a3f71f4720fea043f0e25fd892e75421",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Skin.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Skin.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Skin.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Skin.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Skin.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Skin.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Skin.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Skin.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Skin.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Skin.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Skin.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Skin.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Skin.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Skin.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Skin.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Skin.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Skin.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Skin.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Skin.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Skin.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Skin.sol:1376"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Skin.sol:1380"
          },
          {
            "contract": "Skin",
            "label": "_tokenIds",
            "type": "t_struct(Counter)525_storage",
            "src": "contracts\\Skin.sol:1452"
          },
          {
            "contract": "Skin",
            "label": "_maxSupply",
            "type": "t_uint256",
            "src": "contracts\\Skin.sol:1454"
          },
          {
            "contract": "Skin",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Skin.sol:1455"
          },
          {
            "contract": "Skin",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Skin.sol:1456"
          },
          {
            "contract": "Skin",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Skin.sol:1457"
          },
          {
            "contract": "Skin",
            "label": "minter",
            "type": "t_address",
            "src": "contracts\\Skin.sol:1459"
          },
          {
            "contract": "Skin",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2599_storage)",
            "src": "contracts\\Skin.sol:1466"
          }
        ],
        "types": {
          "t_struct(Counter)525_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2599_storage)": {
            "label": "mapping(uint256 => struct Skin.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2599_storage": {
            "label": "struct Skin.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2b02af66baf5574003d92cbe979570cad726f0d8868b03c16e4a7c07dce229d5": {
      "address": "0x7cE1c73E8Df45bf10d009526085DD58774073b7F",
      "txHash": "0xb828d28e7e73323d891e876fc16408bef8f002cd896844a2c5bdfc59a75c80ae",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Land.sol:363"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Land.sol:368"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Land.sol:421"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Land.sol:445"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Land.sol:481"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Land.sol:661"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Land.sol:664"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Land.sol:667"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Land.sol:670"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Land.sol:673"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Land.sol:676"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Land.sol:1089"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Land.sol:1099"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Land.sol:1102"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Land.sol:1105"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Land.sol:1108"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Land.sol:1247"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Land.sol:1259"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Land.sol:1312"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Land.sol:1316"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Land.sol:1376"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Land.sol:1380"
          },
          {
            "contract": "Land",
            "label": "_tokenIds",
            "type": "t_struct(Counter)525_storage",
            "src": "contracts\\Land.sol:1452"
          },
          {
            "contract": "Land",
            "label": "_maxSupply",
            "type": "t_uint256",
            "src": "contracts\\Land.sol:1454"
          },
          {
            "contract": "Land",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Land.sol:1455"
          },
          {
            "contract": "Land",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Land.sol:1456"
          },
          {
            "contract": "Land",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Land.sol:1457"
          },
          {
            "contract": "Land",
            "label": "minter",
            "type": "t_address",
            "src": "contracts\\Land.sol:1459"
          },
          {
            "contract": "Land",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2599_storage)",
            "src": "contracts\\Land.sol:1466"
          }
        ],
        "types": {
          "t_struct(Counter)525_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2599_storage)": {
            "label": "mapping(uint256 => struct Land.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2599_storage": {
            "label": "struct Land.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ff9ca5cb202c697c14dfe598c78b05880bda6d6970c350ac7fd922f0565123f0": {
      "address": "0x80a96F01195aC19A74C7533155A57Cdba903F00E",
      "txHash": "0x114952ceafd1b185a2c5c25f0d84dff3bfa74d1b90d1630758a4681f7963218a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:427"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:432"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Presale.sol:489"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Presale.sol:513"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:556"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:779"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:782"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Presale.sol:785"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Presale.sol:788"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Presale.sol:791"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Presale.sol:794"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Presale.sol:1301"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Presale.sol:1314"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1317"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Presale.sol:1320"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1323"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Presale.sol:1490"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Presale.sol:1504"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:1572"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Presale.sol:1576"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:1642"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Presale.sol:1750"
          },
          {
            "contract": "Pack",
            "label": "_tokenIds",
            "type": "t_struct(Counter)526_storage",
            "src": "contracts\\Presale.sol:1839"
          },
          {
            "contract": "Pack",
            "label": "gameOpend",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:1841"
          },
          {
            "contract": "Pack",
            "label": "preSaleStarted",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:1842"
          },
          {
            "contract": "Pack",
            "label": "admin",
            "type": "t_address",
            "src": "contracts\\Presale.sol:1843"
          },
          {
            "contract": "Pack",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:1844"
          },
          {
            "contract": "Pack",
            "label": "SeedToken",
            "type": "t_contract(NonNFT)2679",
            "src": "contracts\\Presale.sol:1846"
          },
          {
            "contract": "Pack",
            "label": "SkinToken",
            "type": "t_contract(NonNFT)2679",
            "src": "contracts\\Presale.sol:1847"
          },
          {
            "contract": "Pack",
            "label": "SeedNFT",
            "type": "t_contract(INFT)2671",
            "src": "contracts\\Presale.sol:1848"
          },
          {
            "contract": "Pack",
            "label": "SkinNFT",
            "type": "t_contract(INFT)2671",
            "src": "contracts\\Presale.sol:1849"
          },
          {
            "contract": "Pack",
            "label": "LandNFT",
            "type": "t_contract(INFT)2671",
            "src": "contracts\\Presale.sol:1850"
          },
          {
            "contract": "Pack",
            "label": "BUSD",
            "type": "t_contract(IBEP20Upgradeable)2529",
            "src": "contracts\\Presale.sol:1851"
          },
          {
            "contract": "Pack",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Presale.sol:1853"
          },
          {
            "contract": "Pack",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1854"
          },
          {
            "contract": "Pack",
            "label": "_whitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Presale.sol:1855"
          },
          {
            "contract": "Pack",
            "label": "_packToMaxSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1856"
          },
          {
            "contract": "Pack",
            "label": "_packToCurrentSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1857"
          },
          {
            "contract": "Pack",
            "label": "_packToPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1858"
          },
          {
            "contract": "Pack",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2753_storage)",
            "src": "contracts\\Presale.sol:1865"
          }
        ],
        "types": {
          "t_struct(Counter)526_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(NonNFT)2679": {
            "label": "contract NonNFT"
          },
          "t_contract(INFT)2671": {
            "label": "contract INFT"
          },
          "t_contract(IBEP20Upgradeable)2529": {
            "label": "contract IBEP20Upgradeable"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2753_storage)": {
            "label": "mapping(uint256 => struct Pack.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2753_storage": {
            "label": "struct Pack.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "91d61e8f93593f0fb35ca35ec4301b1348f382e0ef4a021ae1a7d200234e6bed": {
      "address": "0x0F11687DBF52Db955a618F1Df83b578D0E5b0E52",
      "txHash": "0xd7fefbe9317f7ce1cfe5a6fa58d9e997abff5fc41e38a72071e33582822a8731",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:427"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:432"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Presale.sol:489"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Presale.sol:513"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:556"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:779"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:782"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Presale.sol:785"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Presale.sol:788"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Presale.sol:791"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Presale.sol:794"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Presale.sol:1301"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Presale.sol:1314"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1317"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Presale.sol:1320"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1323"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Presale.sol:1490"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Presale.sol:1504"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:1572"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Presale.sol:1576"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:1642"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Presale.sol:1750"
          },
          {
            "contract": "Pack",
            "label": "_tokenIds",
            "type": "t_struct(Counter)526_storage",
            "src": "contracts\\Presale.sol:1839"
          },
          {
            "contract": "Pack",
            "label": "gameOpend",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:1841"
          },
          {
            "contract": "Pack",
            "label": "preSaleStarted",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:1842"
          },
          {
            "contract": "Pack",
            "label": "vaultAddress",
            "type": "t_address",
            "src": "contracts\\Presale.sol:1843"
          },
          {
            "contract": "Pack",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:1844"
          },
          {
            "contract": "Pack",
            "label": "SeedToken",
            "type": "t_contract(NonNFT)2679",
            "src": "contracts\\Presale.sol:1846"
          },
          {
            "contract": "Pack",
            "label": "SkinToken",
            "type": "t_contract(NonNFT)2679",
            "src": "contracts\\Presale.sol:1847"
          },
          {
            "contract": "Pack",
            "label": "SeedNFT",
            "type": "t_contract(INFT)2671",
            "src": "contracts\\Presale.sol:1848"
          },
          {
            "contract": "Pack",
            "label": "SkinNFT",
            "type": "t_contract(INFT)2671",
            "src": "contracts\\Presale.sol:1849"
          },
          {
            "contract": "Pack",
            "label": "LandNFT",
            "type": "t_contract(INFT)2671",
            "src": "contracts\\Presale.sol:1850"
          },
          {
            "contract": "Pack",
            "label": "BUSD",
            "type": "t_contract(IBEP20Upgradeable)2529",
            "src": "contracts\\Presale.sol:1851"
          },
          {
            "contract": "Pack",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Presale.sol:1853"
          },
          {
            "contract": "Pack",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1854"
          },
          {
            "contract": "Pack",
            "label": "_whitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Presale.sol:1855"
          },
          {
            "contract": "Pack",
            "label": "_packToMaxSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1856"
          },
          {
            "contract": "Pack",
            "label": "_packToCurrentSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1857"
          },
          {
            "contract": "Pack",
            "label": "_packToPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1858"
          },
          {
            "contract": "Pack",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2753_storage)",
            "src": "contracts\\Presale.sol:1865"
          }
        ],
        "types": {
          "t_struct(Counter)526_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(NonNFT)2679": {
            "label": "contract NonNFT"
          },
          "t_contract(INFT)2671": {
            "label": "contract INFT"
          },
          "t_contract(IBEP20Upgradeable)2529": {
            "label": "contract IBEP20Upgradeable"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2753_storage)": {
            "label": "mapping(uint256 => struct Pack.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2753_storage": {
            "label": "struct Pack.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "106fcaa8011013b22452a11dffd51127c64aad790435833c48eebbea31702f92": {
      "address": "0x6D26A2F723224bB6930a34e0ac74C43Ed6AF5E36",
      "txHash": "0x33dd3df70264f80ba7d689b9c8075225cf9422e03ab5f94f4e43bcf05223c9a1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:427"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:432"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\Presale.sol:489"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\Presale.sol:513"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:556"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:779"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:782"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Presale.sol:789"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Presale.sol:792"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\Presale.sol:795"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\Presale.sol:798"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\Presale.sol:1310"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts\\Presale.sol:1323"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1326"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Presale.sol:1329"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1332"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\Presale.sol:1499"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\Presale.sol:1513"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:1581"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\Presale.sol:1585"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\Presale.sol:1651"
          },
          {
            "contract": "Delegatable",
            "label": "delegates",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Presale.sol:1759"
          },
          {
            "contract": "Pack",
            "label": "_tokenIds",
            "type": "t_struct(Counter)526_storage",
            "src": "contracts\\Presale.sol:1848"
          },
          {
            "contract": "Pack",
            "label": "gameOpend",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:1850"
          },
          {
            "contract": "Pack",
            "label": "preSaleStarted",
            "type": "t_bool",
            "src": "contracts\\Presale.sol:1851"
          },
          {
            "contract": "Pack",
            "label": "vaultAddress",
            "type": "t_address",
            "src": "contracts\\Presale.sol:1852"
          },
          {
            "contract": "Pack",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts\\Presale.sol:1853"
          },
          {
            "contract": "Pack",
            "label": "SeedToken",
            "type": "t_contract(NonNFT)2694",
            "src": "contracts\\Presale.sol:1855"
          },
          {
            "contract": "Pack",
            "label": "SkinToken",
            "type": "t_contract(NonNFT)2694",
            "src": "contracts\\Presale.sol:1856"
          },
          {
            "contract": "Pack",
            "label": "SeedNFT",
            "type": "t_contract(INFT)2686",
            "src": "contracts\\Presale.sol:1857"
          },
          {
            "contract": "Pack",
            "label": "SkinNFT",
            "type": "t_contract(INFT)2686",
            "src": "contracts\\Presale.sol:1858"
          },
          {
            "contract": "Pack",
            "label": "LandNFT",
            "type": "t_contract(INFT)2686",
            "src": "contracts\\Presale.sol:1859"
          },
          {
            "contract": "Pack",
            "label": "BUSD",
            "type": "t_contract(IBEP20Upgradeable)2544",
            "src": "contracts\\Presale.sol:1860"
          },
          {
            "contract": "Pack",
            "label": "_ownerToTokenIds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Presale.sol:1862"
          },
          {
            "contract": "Pack",
            "label": "_tokenMetas",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1863"
          },
          {
            "contract": "Pack",
            "label": "_whitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Presale.sol:1864"
          },
          {
            "contract": "Pack",
            "label": "_packToMaxSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1865"
          },
          {
            "contract": "Pack",
            "label": "_packToCurrentSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1866"
          },
          {
            "contract": "Pack",
            "label": "_packToPrice",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\Presale.sol:1867"
          },
          {
            "contract": "Pack",
            "label": "extraInfoMap",
            "type": "t_mapping(t_uint256,t_struct(TokenExtraInfo)2768_storage)",
            "src": "contracts\\Presale.sol:1874"
          }
        ],
        "types": {
          "t_struct(Counter)526_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(NonNFT)2694": {
            "label": "contract NonNFT"
          },
          "t_contract(INFT)2686": {
            "label": "contract INFT"
          },
          "t_contract(IBEP20Upgradeable)2544": {
            "label": "contract IBEP20Upgradeable"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_struct(TokenExtraInfo)2768_storage)": {
            "label": "mapping(uint256 => struct Pack.TokenExtraInfo)"
          },
          "t_struct(TokenExtraInfo)2768_storage": {
            "label": "struct Pack.TokenExtraInfo",
            "members": [
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
